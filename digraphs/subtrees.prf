(subtrees
 (walk_acr_TCC1 0
  (walk_acr_TCC1-1 nil 3301756562 ("" (subtype-tcc) nil nil) nil nil))
 (walk_acr_TCC2 0
  (walk_acr_TCC2-1 nil 3301756562 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil subtrees nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (predigraph type-eq-decl nil digraph_def nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (digraph_type type-eq-decl nil digraphs_imp nil)
    (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (digraph type-eq-decl nil digraph_def nil)
    (digraph_verts const-decl "[digraph -> [T -> bool]]" digraphs_imp
     nil)
    (digraph_edges const-decl "[digraph -> [T, T -> bool]]"
     digraphs_imp nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (digraph_size const-decl "[digraph -> nat]" digraphs_imp nil)
    (is_finite const-decl "bool" finite_sets nil)
    (digraph_make const-decl "[v: (is_finite[T]),
 {e: (is_finite[[T, T]]) |
          FORALL (x, y: T): e(x, y) IMPLIES v(x) AND v(y)} ->
   digraph]" digraphs_imp nil)
    (Digraph type-eq-decl nil digraphs_ nil)
    (> const-decl "bool" reals nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (prewalk type-eq-decl nil walks_ nil)
    (walk? const-decl "bool" walks_ nil)
    (Walk type-eq-decl nil walks_ nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (edge? const-decl "bool" digraphs_ nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (verts_in? const-decl "bool" walks_ nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil))
   nil))
 (walk_acr_TCC3 0
  (walk_acr_TCC3-1 nil 3301756562 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil subtrees nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (predigraph type-eq-decl nil digraph_def nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (digraph_type type-eq-decl nil digraphs_imp nil)
    (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (digraph type-eq-decl nil digraph_def nil)
    (digraph_verts const-decl "[digraph -> [T -> bool]]" digraphs_imp
     nil)
    (digraph_edges const-decl "[digraph -> [T, T -> bool]]"
     digraphs_imp nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (digraph_size const-decl "[digraph -> nat]" digraphs_imp nil)
    (is_finite const-decl "bool" finite_sets nil)
    (digraph_make const-decl "[v: (is_finite[T]),
 {e: (is_finite[[T, T]]) |
          FORALL (x, y: T): e(x, y) IMPLIES v(x) AND v(y)} ->
   digraph]" digraphs_imp nil)
    (Digraph type-eq-decl nil digraphs_ nil)
    (> const-decl "bool" reals nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (prewalk type-eq-decl nil walks_ nil)
    (walk? const-decl "bool" walks_ nil)
    (Walk type-eq-decl nil walks_ nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (edge? const-decl "bool" digraphs_ nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (verts_in? const-decl "bool" walks_ nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil))
   nil))
 (walk_acr 0
  (walk_acr-1 nil 3301756562
   ("" (induct "n" 1 "NAT_induction")
    (("1" (skosimp*)
      (("1" (inst -1 "j!1-1")
        (("1" (assert)
          (("1" (inst?)
            (("1" (assert)
              (("1" (split -1)
                (("1" (skosimp*)
                  (("1" (inst 3 "j!2") (("1" (assert) nil nil)) nil))
                  nil)
                 ("2" (assert)
                  (("2" (inst 2 "j!1") (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (assert) nil nil))
        nil))
      nil)
     ("2" (skosimp*) (("2" (assert) nil nil)) nil)
     ("3" (skosimp*) (("3" (assert) nil nil)) nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (j!1 skolem-const-decl "nat" subtrees nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NAT_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (T formal-type-decl nil subtrees nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (predigraph type-eq-decl nil digraph_def nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (digraph_type type-eq-decl nil digraphs_imp nil)
    (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (digraph type-eq-decl nil digraph_def nil)
    (digraph_verts const-decl "[digraph -> [T -> bool]]" digraphs_imp
     nil)
    (digraph_edges const-decl "[digraph -> [T, T -> bool]]"
     digraphs_imp nil)
    (digraph_size const-decl "[digraph -> nat]" digraphs_imp nil)
    (is_finite const-decl "bool" finite_sets nil)
    (digraph_make const-decl "[v: (is_finite[T]),
 {e: (is_finite[[T, T]]) |
          FORALL (x, y: T): e(x, y) IMPLIES v(x) AND v(y)} ->
   digraph]" digraphs_imp nil)
    (Digraph type-eq-decl nil digraphs_ nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (> const-decl "bool" reals nil)
    (prewalk type-eq-decl nil walks_ nil)
    (walk? const-decl "bool" walks_ nil)
    (Walk type-eq-decl nil walks_ nil) (< const-decl "bool" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (walk_acr2 0
  (walk_acr2-1 nil 3301756562
   ("" (induct "n" 1 "NAT_induction")
    (("1" (skosimp*)
      (("1" (inst -1 "j!1-1")
        (("1" (assert)
          (("1" (inst?)
            (("1" (assert)
              (("1" (split -1)
                (("1" (skosimp*)
                  (("1" (inst 3 "j!2") (("1" (assert) nil nil)) nil))
                  nil)
                 ("2" (inst 2 "j!1") (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (assert) nil nil))
        nil))
      nil)
     ("2" (skosimp*) (("2" (assert) nil nil)) nil)
     ("3" (skosimp*) (("3" (assert) nil nil)) nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (j!1 skolem-const-decl "nat" subtrees nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NAT_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (T formal-type-decl nil subtrees nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (predigraph type-eq-decl nil digraph_def nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (digraph_type type-eq-decl nil digraphs_imp nil)
    (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (digraph type-eq-decl nil digraph_def nil)
    (digraph_verts const-decl "[digraph -> [T -> bool]]" digraphs_imp
     nil)
    (digraph_edges const-decl "[digraph -> [T, T -> bool]]"
     digraphs_imp nil)
    (digraph_size const-decl "[digraph -> nat]" digraphs_imp nil)
    (is_finite const-decl "bool" finite_sets nil)
    (digraph_make const-decl "[v: (is_finite[T]),
 {e: (is_finite[[T, T]]) |
          FORALL (x, y: T): e(x, y) IMPLIES v(x) AND v(y)} ->
   digraph]" digraphs_imp nil)
    (Digraph type-eq-decl nil digraphs_ nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (> const-decl "bool" reals nil)
    (prewalk type-eq-decl nil walks_ nil)
    (walk? const-decl "bool" walks_ nil)
    (Walk type-eq-decl nil walks_ nil) (< const-decl "bool" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (add_pair 0
  (add_pair-1 nil 3301756562
   ("" (skosimp*)
    (("" (expand "add")
      (("" (expand "member")
        (("" (split -2)
          (("1" (replace -1 * rl)
            (("1" (hide -1) (("1" (ground) nil nil)) nil)) nil)
           ("2" (typepred "G!1")
            (("2" (inst?)
              (("2" (assert)
                (("2" (flatten) (("2" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((add const-decl "(nonempty?)" sets nil)
    (edgetype type-eq-decl nil digraphs_utils nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil subtrees nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (predigraph type-eq-decl nil digraph_def nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (digraph_type type-eq-decl nil digraphs_imp nil)
    (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (digraph type-eq-decl nil digraph_def nil)
    (digraph_verts const-decl "[digraph -> [T -> bool]]" digraphs_imp
     nil)
    (digraph_edges const-decl "[digraph -> [T, T -> bool]]"
     digraphs_imp nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (digraph_size const-decl "[digraph -> nat]" digraphs_imp nil)
    (is_finite const-decl "bool" finite_sets nil)
    (digraph_make const-decl "[v: (is_finite[T]),
 {e: (is_finite[[T, T]]) |
          FORALL (x, y: T): e(x, y) IMPLIES v(x) AND v(y)} ->
   digraph]" digraphs_imp nil)
    (Digraph type-eq-decl nil digraphs_ nil)
    (member const-decl "bool" sets nil))
   nil))
 (max_tree_all_verts 0
  (max_tree_all_verts-7 nil 3805642403
   ("" (skosimp*)
    (("" (decompose-equality)
      (("" (iff 1)
        (("" (prop)
          (("1" (hide -2)
            (("1" (expand "max_subtree")
              (("1" (typepred "max_di_subgraph(G!1, tree?)")
                (("1" (hide -1 -3 -5)
                  (("1" (expand "di_subgraph?")
                    (("1" (flatten)
                      (("1" (hide -2)
                        (("1" (expand* "subset?" "member")
                          (("1" (inst -1 "x!1")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (name-replace "TR" "max_subtree(G!1)" :hide? nil)
            (("2" (lemma "max_subtree_tree")
              (("2" (inst?)
                (("2" (replace -2)
                  (("2" (case "(EXISTS (v: T): vert(TR)(v))")
                    (("1" (skosimp*)
                      (("1" (expand* "connected?" "reachable?")
                        (("1" (inst -5 "v!1" "x!1")
                          (("1" (assert)
                            (("1" (skosimp*)
                              (("1"
                                (case
                                 "(EXISTS (j: posnat): j < length(w!1) AND vert(TR)(w!1(j-1)) AND
                                                                                                                       	                               NOT vert(TR)(w!1(j)))")
                                (("1"
                                  (expand*
                                   "walk_from?"
                                   "walk?"
                                   "from?"
                                   "verts_in?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "finseq_appl")
                                      (("1"
                                        (skosimp*)
                                        (("1"
                                          (inst -10 "j!1 - 1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (name-replace
                                               "ss"
                                               "seq(w!1)(j!1 - 1)"
                                               :hide?
                                               nil)
                                              (("1"
                                                (name-replace
                                                 "tt"
                                                 "seq(w!1)(j!1)"
                                                 :hide?
                                                 nil)
                                                (("1"
                                                  (name
                                                   "TP"
                                                   "(# vert := add(tt,vert(TR)),
                                                                                                                                                                  edges := add((ss,tt),edges(TR)) #)")
                                                  (("1"
                                                    (case "tree?(TP)")
                                                    (("1"
                                                      (lemma
                                                       "max_subtree_max")
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "G!1"
                                                         "TP")
                                                        (("1"
                                                          (replace -10)
                                                          (("1"
                                                            (replace
                                                             -3
                                                             -1
                                                             rl)
                                                            (("1"
                                                              (expand
                                                               "size"
                                                               :assert?
                                                               t)
                                                              (("1"
                                                                (rewrite
                                                                 "card_add")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "di_subgraph?")
                                                            (("2"
                                                              (split)
                                                              (("1"
                                                                (expand*
                                                                 "subset?"
                                                                 "member")
                                                                (("1"
                                                                  (skosimp)
                                                                  (("1"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("1"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("1"
                                                                        (hide
                                                                         -1
                                                                         -3)
                                                                        (("1"
                                                                          (expand
                                                                           "di_subgraph?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (hide
                                                                               -2)
                                                                              (("1"
                                                                                (replace
                                                                                 -11)
                                                                                (("1"
                                                                                  (case
                                                                                   "vert(TR)(x!2)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -2
                                                                                         "x!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "x!2 = tt")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -16
                                                                                       "j!1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "vert(TP) = add(tt, vert(TR))")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "add"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (decompose-equality
                                                                                           -1)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "x!2")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-4
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "add")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-2
                                                                  -9
                                                                  -14
                                                                  1))
                                                                (("2"
                                                                  (expand
                                                                   "max_subtree")
                                                                  (("2"
                                                                    (typepred
                                                                     "max_di_subgraph(G!1, tree?)")
                                                                    (("2"
                                                                      (hide
                                                                       -1
                                                                       -3)
                                                                      (("2"
                                                                        (expand
                                                                         "di_subgraph?")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (expand*
                                                                               "subset?"
                                                                               "member")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (replace
                                                                                   -4)
                                                                                  (("2"
                                                                                    (case
                                                                                     "edges(TR)(x!2)")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -2
                                                                                       "x!2")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "x!2 = (ss, tt)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "edge?")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         -1
                                                                                         -5
                                                                                         3)
                                                                                        (("2"
                                                                                          (case
                                                                                           "edges(TP) = add((ss, tt), edges(TR))")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -3)
                                                                                            (("1"
                                                                                              (expand*
                                                                                               "add"
                                                                                               "member")
                                                                                              (("1"
                                                                                                (decompose-equality
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "x!2")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (replace
                                                                                             -2
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand*
                                                                                                 "add"
                                                                                                 "member")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "tree?"
                                                       1)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (inst 2 "tt")
                                                          (("1"
                                                            (case
                                                             "card(vert(TP)) = 1 IMPLIES card(edges(TP))=0")
                                                            (("1"
                                                              (case
                                                               "card(vert(TP)) = 1 ")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (delete
                                                                 -1)
                                                                (("2"
                                                                  (delete
                                                                   2)
                                                                  (("2"
                                                                    (split)
                                                                    (("1"
                                                                      (expand
                                                                       "leaf?")
                                                                      (("1"
                                                                        (split)
                                                                        (("1"
                                                                          (expand
                                                                           "in_deg")
                                                                          (("1"
                                                                            (rewrite
                                                                             "card_one"
                                                                             1)
                                                                            (("1"
                                                                              (inst
                                                                               1
                                                                               "(ss, tt)")
                                                                              (("1"
                                                                                (decompose-equality
                                                                                 1)
                                                                                (("1"
                                                                                  (iff)
                                                                                  (("1"
                                                                                    (prop)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "incoming_edges")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (expand*
                                                                                           "add"
                                                                                           "member")
                                                                                          (("1"
                                                                                            (case
                                                                                             "edges(TP) = {y: edgetype | (ss, tt) = y OR edges(TR)(y)}")
                                                                                            (("1"
                                                                                              (hide
                                                                                               -4)
                                                                                              (("1"
                                                                                                (decompose-equality
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "(x!2, x!3)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (split)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "singleton")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          -7
                                                                                                          -10
                                                                                                          3))
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "max_subtree")
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "max_di_subgraph(G!1, tree?)")
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -2
                                                                                                               -3)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "(x!2, x!3)")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -3
                                                                                               1
                                                                                               rl)
                                                                                              (("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (decompose-equality)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        -2
                                                                                        1))
                                                                                      (("2"
                                                                                        (expand
                                                                                         "incoming_edges")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "singleton")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (replaces
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1
                                                                                                     1
                                                                                                     rl)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "add")
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "out_deg")
                                                                          (("2"
                                                                            (lemma
                                                                             "empty_card[edgetype]")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "outgoing_edges(tt, TP)")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand*
                                                                                   "empty?"
                                                                                   "member")
                                                                                  (("2"
                                                                                    (skosimp)
                                                                                    (("2"
                                                                                      (hide
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "outgoing_edges")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (case
                                                                                             "edges(TR)(x!2)")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "max_subtree")
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "max_di_subgraph(G!1, tree?)")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -2
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -12)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "x!2")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (case
                                                                                               "x!2 = (ss, tt)")
                                                                                              (("1"
                                                                                                (decompose-equality
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   (-1
                                                                                                    -2
                                                                                                    -4
                                                                                                    -17
                                                                                                    -18))
                                                                                                  (("1"
                                                                                                    (replaces
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "no_self_loops?")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -3
                                                                                                           "(ss, tt)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "edge?")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -3
                                                                                                  1
                                                                                                  2))
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -2
                                                                                                   -1
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "add"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "member")
                                                                                                      (("2"
                                                                                                        (prop)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (case
                                                                       "del_vert(TP, tt) = TR")
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-1
                                                                          -8
                                                                          1
                                                                          4))
                                                                        (("2"
                                                                          (expand
                                                                           "del_vert")
                                                                          (("2"
                                                                            (decompose-equality
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "in?")
                                                                              (("1"
                                                                                (decompose-equality)
                                                                                (("1"
                                                                                  (iff)
                                                                                  (("1"
                                                                                    (ground)
                                                                                    (("1"
                                                                                      (case
                                                                                       "edges(TP) = add((ss, tt), edges(TR))")
                                                                                      (("1"
                                                                                        (hide
                                                                                         -3)
                                                                                        (("1"
                                                                                          (expand*
                                                                                           "add"
                                                                                           "member")
                                                                                          (("1"
                                                                                            (decompose-equality
                                                                                             -1)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "(x!2, x!3)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         -2
                                                                                         1
                                                                                         rl)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "add")
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -2
                                                                                       1
                                                                                       rl)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "add"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (hide
                                                                                       -3)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "max_subtree")
                                                                                        (("3"
                                                                                          (typepred
                                                                                           "max_di_subgraph(G!1, tree?)")
                                                                                          (("3"
                                                                                            (hide
                                                                                             -2
                                                                                             -3)
                                                                                            (("3"
                                                                                              (replace
                                                                                               -4)
                                                                                              (("3"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "(x!2, x!3)")
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("4"
                                                                                      (hide
                                                                                       -3)
                                                                                      (("4"
                                                                                        (expand
                                                                                         "max_subtree")
                                                                                        (("4"
                                                                                          (typepred
                                                                                           "max_di_subgraph(G!1, tree?)")
                                                                                          (("4"
                                                                                            (hide
                                                                                             -2
                                                                                             -3)
                                                                                            (("4"
                                                                                              (replace
                                                                                               -4)
                                                                                              (("4"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "(x!2, x!3)")
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (decompose-equality)
                                                                              (("2"
                                                                                (iff)
                                                                                (("2"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (expand*
                                                                                     "remove"
                                                                                     "member")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -2
                                                                                         -1
                                                                                         rl)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "add"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand*
                                                                                     "remove"
                                                                                     "member")
                                                                                    (("2"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         -2
                                                                                         1
                                                                                         rl)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (expand*
                                                                                               "add"
                                                                                               "member")
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (delete
                                                               2
                                                               3
                                                               4
                                                               5)
                                                              (("2"
                                                                (replace
                                                                 -1
                                                                 1
                                                                 RL)
                                                                (("2"
                                                                  (simplify)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (lemma
                                                                       card_add)
                                                                      (("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (replace
                                                                           -1
                                                                           -2)
                                                                          (("2"
                                                                            (delete
                                                                             -1)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (lemma
                                                                                 tree_size_pos)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   TR)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand
                                                                                       size
                                                                                       -1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-1 1))
                                                            (("2"
                                                              (replace
                                                               -1
                                                               1
                                                               rl)
                                                              (("2"
                                                                (hide
                                                                 -1)
                                                                (("2"
                                                                  (expand
                                                                   "add")
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (skosimp)
                                                      (("3"
                                                        (case
                                                         "e!1 = (ss, tt)")
                                                        (("1"
                                                          (hide-all-but
                                                           (-1
                                                            -2
                                                            -3
                                                            -7
                                                            1))
                                                          (("1"
                                                            (replace
                                                             -3
                                                             1
                                                             rl)
                                                            (("1"
                                                              (expand*
                                                               "add"
                                                               "member")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (-1
                                                            -2
                                                            -6
                                                            -9
                                                            1
                                                            2))
                                                          (("2"
                                                            (replace
                                                             -2
                                                             *
                                                             rl)
                                                            (("2"
                                                              (hide -2)
                                                              (("2"
                                                                (expand*
                                                                 "add"
                                                                 "member")
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("1"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("1"
                                                                        (hide
                                                                         -2
                                                                         -3)
                                                                        (("1"
                                                                          (replace
                                                                           -4)
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "e!1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("2"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("2"
                                                                        (hide
                                                                         -2
                                                                         -3)
                                                                        (("2"
                                                                          (replace
                                                                           -4)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "e!1")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "finseq_appl")
                                  (("2"
                                    (lemma "walk_acr")
                                    (("2"
                                      (inst
                                       -1
                                       "G!1"
                                       "TR"
                                       "length(w!1)-1"
                                       "w!1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand*
                                           "walk_from?"
                                           "from?")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (inst 2 "j!1")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "walk_from?")
                                        (("2" (flatten) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (skosimp*)
                                  (("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "max_subtree")
                            (("2"
                              (typepred "max_di_subgraph(G!1, tree?)")
                              (("2"
                                (hide -1 -3)
                                (("2"
                                  (expand "di_subgraph?")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (hide -2)
                                      (("2"
                                        (expand "subset?")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (inst -1 "v!1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "tree?")
                      (("2" (split)
                        (("1" (rewrite "card_1_has_1") nil nil)
                         ("2" (skosimp)
                          (("2" (typepred "v!1")
                            (("2" (inst 1 "v!1") nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_set type-eq-decl nil finite_sets nil)
    (predigraph type-eq-decl nil digraph_def nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (digraph_type type-eq-decl nil digraphs_imp nil)
    (nonempty? const-decl "bool" sets nil)
    (digraph type-eq-decl nil digraph_def nil)
    (digraph_verts const-decl "[digraph -> [T -> bool]]" digraphs_imp
     nil)
    (digraph_edges const-decl "[digraph -> [T, T -> bool]]"
     digraphs_imp nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (digraph_size const-decl "[digraph -> nat]" digraphs_imp nil)
    (is_finite const-decl "bool" finite_sets nil)
    (digraph_make const-decl "[v: (is_finite[T]),
 {e: (is_finite[[T, T]]) |
          FORALL (x, y: T): e(x, y) IMPLIES v(x) AND v(y)} ->
   digraph]" digraphs_imp nil)
    (Digraph type-eq-decl nil digraphs_ nil)
    (tree? def-decl "bool" trees nil) (Tree type-eq-decl nil trees nil)
    (di_subgraph? const-decl "bool" di_subgraphs_ nil)
    (Subtree type-eq-decl nil max_subtrees nil)
    (max_subtree const-decl "Subtree(G)" max_subtrees nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil subtrees nil)
    (member const-decl "bool" sets nil)
    (subset? const-decl "bool" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (Gpred type-eq-decl nil max_di_subgraphs nil)
    (di_subgraph type-eq-decl nil di_subgraphs_ nil)
    (maximal? const-decl "bool" max_di_subgraphs nil)
    (max_di_subgraph const-decl
     "{S: di_subgraph(G) | maximal?(G, S, P)}" max_di_subgraphs nil)
    (max_subtree_tree formula-decl nil max_subtrees nil)
    (card_1_has_1 formula-decl nil finite_sets nil)
    (G!1 skolem-const-decl "Digraph
    [T, digraph_type[T], digraph_verts, digraph_edges, digraph_size,
     digraph_make]" subtrees nil)
    (x!1 skolem-const-decl "T" subtrees nil)
    (v!1 skolem-const-decl "T" subtrees nil)
    (w!1 skolem-const-decl "prewalk
    [T, digraph_type[T], digraph_verts, digraph_edges, digraph_size,
     digraph_make]" subtrees nil)
    (Walk type-eq-decl nil walks_ nil)
    (walk_acr formula-decl nil subtrees nil)
    (walk? const-decl "bool" walks_ nil)
    (verts_in? const-decl "bool" walks_ nil)
    (from? const-decl "bool" walks_ nil)
    (walk_from? const-decl "bool" walks_ nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nonempty_add_finite application-judgement
     "non_empty_finite_set[T]" subtrees nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (empty? const-decl "bool" sets nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (tt skolem-const-decl "T" subtrees nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (tree_size_pos formula-decl nil trees nil)
    (del_vert const-decl "digraph[T]" digraph_ops nil)
    (remove const-decl "set" sets nil)
    (pair type-eq-decl nil pairs "structures/")
    (in? const-decl "bool" pairs "structures/")
    (finite_remove application-judgement "finite_set[T]" subtrees nil)
    (leaf? const-decl "bool" trees nil)
    (out_deg const-decl "nat" digraph_deg nil)
    (outgoing_edges const-decl "finite_set[edgetype[T]]" digraph_deg
     nil)
    (no_self_loops? const-decl "bool" trees nil)
    (empty_card formula-decl nil finite_sets nil)
    (in_deg const-decl "nat" digraph_deg nil)
    (TRUE const-decl "bool" booleans nil)
    (TR skolem-const-decl "Subtree[T](G!1)" subtrees nil)
    (ss skolem-const-decl "T" subtrees nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (card_one formula-decl nil finite_sets nil)
    (incoming_edges const-decl "finite_set[edgetype[T]]" digraph_deg
     nil)
    (edgetype type-eq-decl nil digraphs_utils nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (max_subtree_max formula-decl nil max_subtrees nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (below type-eq-decl nil naturalnumbers nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (edge? const-decl "bool" digraphs_ nil)
    (size const-decl "nat" digraph_def nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (card_add formula-decl nil finite_sets nil)
    (TP skolem-const-decl
     "[# edges: non_empty_finite_set[[T, T]], vert: non_empty_finite_set[T] #]"
     subtrees nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (prewalk type-eq-decl nil walks_ nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (connected? const-decl "bool" digraph_conn_defs nil)
    (reachable? const-decl "bool" walks_ nil)
    (= const-decl "[T, T -> boolean]" equalities nil))
   nil)
  (max_tree_all_verts-6 nil 3805641510
   ("" (skosimp*)
    (("" (decompose-equality)
      (("" (iff 1)
        (("" (prop)
          (("1"
            (just-install-proof
             ("1" (hide -2) (expand "max_subtree")
              (typepred "max_di_subgraph(G!1, tree?)") (hide -1 -3 -5)
              (expand "di_subgraph?") (flatten) (hide -2)
              (expand* "subset?" "member") (inst -1 "x!1") (assert)))
            nil)
           ("2" (name-replace "TR" "max_subtree(G!1)" :hide? nil)
            (("2" (lemma "max_subtree_tree")
              (("2" (inst?)
                (("2" (replace -2)
                  (("2" (case "(EXISTS (v: T): vert(TR)(v))")
                    (("1" (skosimp*)
                      (("1" (expand* "connected?" "reachable?")
                        (("1" (inst -5 "v!1" "x!1")
                          (("1" (assert)
                            (("1" (skosimp*)
                              (("1"
                                (case
                                 "(EXISTS (j: posnat): j < length(w!1) AND vert(TR)(w!1(j-1)) AND
                                                                                                                       	                               NOT vert(TR)(w!1(j)))")
                                (("1"
                                  (expand*
                                   "walk_from?"
                                   "walk?"
                                   "from?"
                                   "verts_in?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "finseq_appl")
                                      (("1"
                                        (skosimp*)
                                        (("1"
                                          (inst -10 "j!1 - 1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (name-replace
                                               "ss"
                                               "seq(w!1)(j!1 - 1)"
                                               :hide?
                                               nil)
                                              (("1"
                                                (name-replace
                                                 "tt"
                                                 "seq(w!1)(j!1)"
                                                 :hide?
                                                 nil)
                                                (("1"
                                                  (name
                                                   "TP"
                                                   "(# vert := add(tt,vert(TR)),
                                                                                                                                                                  edges := add((ss,tt),edges(TR)) #)")
                                                  (("1"
                                                    (case "tree?(TP)")
                                                    (("1"
                                                      (just-install-proof
                                                       ("1"
                                                        (lemma
                                                         "max_subtree_max")
                                                        (inst
                                                         -1
                                                         "G!1"
                                                         "TP")
                                                        (("1"
                                                          (replace -10)
                                                          (replace
                                                           -3
                                                           -1
                                                           rl)
                                                          (expand
                                                           "size"
                                                           :assert?
                                                           t)
                                                          (rewrite
                                                           "card_add")
                                                          (assert))
                                                         ("2"
                                                          (assert)
                                                          (expand
                                                           "di_subgraph?")
                                                          (split)
                                                          (("1"
                                                            (expand*
                                                             "subset?"
                                                             "member")
                                                            (skosimp)
                                                            (expand
                                                             "max_subtree")
                                                            (typepred
                                                             "max_di_subgraph(G!1, tree?)")
                                                            (hide
                                                             -1
                                                             -3)
                                                            (expand
                                                             "di_subgraph?")
                                                            (flatten)
                                                            (hide -2)
                                                            (replace
                                                             -11)
                                                            (case
                                                             "vert(TR)(x!2)")
                                                            (("1"
                                                              (expand
                                                               "subset?")
                                                              (expand
                                                               "member")
                                                              (inst
                                                               -2
                                                               "x!2")
                                                              (assert))
                                                             ("2"
                                                              (case
                                                               "x!2 = tt")
                                                              (("1"
                                                                (inst
                                                                 -16
                                                                 "j!1")
                                                                (assert))
                                                               ("2"
                                                                (case
                                                                 "vert(TP) = add(tt, vert(TR))")
                                                                (("1"
                                                                  (expand
                                                                   "add"
                                                                   -1)
                                                                  (decompose-equality
                                                                   -1)
                                                                  (inst
                                                                   -1
                                                                   "x!2")
                                                                  (assert)
                                                                  (expand
                                                                   "member")
                                                                  (propax))
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (-4
                                                                    1))
                                                                  (expand
                                                                   "add")
                                                                  (replace
                                                                   -1
                                                                   1
                                                                   rl)
                                                                  (hide
                                                                   -1)
                                                                  (expand
                                                                   "member")
                                                                  (propax))))))))
                                                           ("2"
                                                            (hide-all-but
                                                             (-2
                                                              -9
                                                              -14
                                                              1))
                                                            (expand
                                                             "max_subtree")
                                                            (typepred
                                                             "max_di_subgraph(G!1, tree?)")
                                                            (hide
                                                             -1
                                                             -3)
                                                            (expand
                                                             "di_subgraph?")
                                                            (flatten)
                                                            (hide -1)
                                                            (expand*
                                                             "subset?"
                                                             "member")
                                                            (skosimp)
                                                            (replace
                                                             -4)
                                                            (case
                                                             "edges(TR)(x!2)")
                                                            (("1"
                                                              (inst
                                                               -2
                                                               "x!2")
                                                              (assert))
                                                             ("2"
                                                              (case
                                                               "x!2 = (ss, tt)")
                                                              (("1"
                                                                (expand
                                                                 "edge?")
                                                                (assert))
                                                               ("2"
                                                                (hide
                                                                 -1
                                                                 -5
                                                                 3)
                                                                (case
                                                                 "edges(TP) = add((ss, tt), edges(TR))")
                                                                (("1"
                                                                  (hide
                                                                   -3)
                                                                  (expand*
                                                                   "add"
                                                                   "member")
                                                                  (decompose-equality
                                                                   -1)
                                                                  (inst
                                                                   -1
                                                                   "x!2")
                                                                  (assert)
                                                                  (assert))
                                                                 ("2"
                                                                  (replace
                                                                   -2
                                                                   1
                                                                   rl)
                                                                  (hide-all-but
                                                                   1)
                                                                  (expand*
                                                                   "add"
                                                                   "member")))))))))))))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "tree?"
                                                       1)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (inst 2 "tt")
                                                          (("1"
                                                            (checkpoint)
                                                            (("1"
                                                              (split)
                                                              (("1"
                                                                (expand
                                                                 "leaf?")
                                                                (("1"
                                                                  (split)
                                                                  (("1"
                                                                    (expand
                                                                     "in_deg")
                                                                    (("1"
                                                                      (rewrite
                                                                       "card_one"
                                                                       1)
                                                                      (("1"
                                                                        (inst
                                                                         1
                                                                         "(ss, tt)")
                                                                        (("1"
                                                                          (decompose-equality
                                                                           1)
                                                                          (("1"
                                                                            (iff)
                                                                            (("1"
                                                                              (prop)
                                                                              (("1"
                                                                                (expand
                                                                                 "incoming_edges")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (expand*
                                                                                     "add"
                                                                                     "member")
                                                                                    (("1"
                                                                                      (case
                                                                                       "edges(TP) = {y: edgetype | (ss, tt) = y OR edges(TR)(y)}")
                                                                                      (("1"
                                                                                        (hide
                                                                                         -4)
                                                                                        (("1"
                                                                                          (decompose-equality
                                                                                           -1)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "(x!2, x!3)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "singleton")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil)))
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   (-1
                                                                                                    -7
                                                                                                    -10
                                                                                                    3))
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "max_subtree")
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "max_di_subgraph(G!1, tree?)")
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         -2
                                                                                                         -3)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "(x!2, x!3)")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil)))))))))))))))))))))
                                                                                       ("2"
                                                                                        (replace
                                                                                         -3
                                                                                         1
                                                                                         rl)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (decompose-equality)
                                                                                            nil)))))))))))))
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -2
                                                                                  1))
                                                                                (("2"
                                                                                  (expand
                                                                                   "incoming_edges")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "singleton")
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("2"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -1
                                                                                               1
                                                                                               rl)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "add")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil)))))))))))))))))))))))))))))))))
                                                                   ("2"
                                                                    (expand
                                                                     "out_deg")
                                                                    (("2"
                                                                      (lemma
                                                                       "empty_card[edgetype]")
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "outgoing_edges(tt, TP)")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand*
                                                                             "empty?"
                                                                             "member")
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (hide
                                                                                 1)
                                                                                (("2"
                                                                                  (expand
                                                                                   "outgoing_edges")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (case
                                                                                       "edges(TR)(x!2)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "max_subtree")
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "max_di_subgraph(G!1, tree?)")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -2
                                                                                             -3)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -12)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "x!2")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil)))))))))))
                                                                                       ("2"
                                                                                        (case
                                                                                         "x!2 = (ss, tt)")
                                                                                        (("1"
                                                                                          (decompose-equality
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide-all-but
                                                                                             (-1
                                                                                              -2
                                                                                              -4
                                                                                              -17
                                                                                              -18))
                                                                                            (("1"
                                                                                              (replaces
                                                                                               -3)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "no_self_loops?")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -3
                                                                                                     "(ss, tt)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "edge?")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil)))))))))))))))
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           (-1
                                                                                            -3
                                                                                            1
                                                                                            2))
                                                                                          (("2"
                                                                                            (replace
                                                                                             -2
                                                                                             -1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "add"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (prop)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil)))))))))))))))))))))))))))))))))))))
                                                               ("2"
                                                                (case
                                                                 "del_vert(TP, tt) = TR")
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (propax)
                                                                    nil)))
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (-1
                                                                    -8
                                                                    1
                                                                    4))
                                                                  (("2"
                                                                    (expand
                                                                     "del_vert")
                                                                    (("2"
                                                                      (decompose-equality
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "in?")
                                                                        (("1"
                                                                          (decompose-equality)
                                                                          (("1"
                                                                            (iff)
                                                                            (("1"
                                                                              (ground)
                                                                              (("1"
                                                                                (case
                                                                                 "edges(TP) = add((ss, tt), edges(TR))")
                                                                                (("1"
                                                                                  (hide
                                                                                   -3)
                                                                                  (("1"
                                                                                    (expand*
                                                                                     "add"
                                                                                     "member")
                                                                                    (("1"
                                                                                      (decompose-equality
                                                                                       -1)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "(x!2, x!3)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)))))))))
                                                                                 ("2"
                                                                                  (replace
                                                                                   -2
                                                                                   1
                                                                                   rl)
                                                                                  (("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "add")
                                                                                      (("2"
                                                                                        (propax)
                                                                                        nil)))))))))
                                                                               ("2"
                                                                                (replace
                                                                                 -2
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "add"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("2"
                                                                                        (propax)
                                                                                        nil)))))))))
                                                                               ("3"
                                                                                (hide
                                                                                 -3)
                                                                                (("3"
                                                                                  (expand
                                                                                   "max_subtree")
                                                                                  (("3"
                                                                                    (typepred
                                                                                     "max_di_subgraph(G!1, tree?)")
                                                                                    (("3"
                                                                                      (hide
                                                                                       -2
                                                                                       -3)
                                                                                      (("3"
                                                                                        (replace
                                                                                         -4)
                                                                                        (("3"
                                                                                          (inst
                                                                                           -1
                                                                                           "(x!2, x!3)")
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil)))))))))))))
                                                                               ("4"
                                                                                (hide
                                                                                 -3)
                                                                                (("4"
                                                                                  (expand
                                                                                   "max_subtree")
                                                                                  (("4"
                                                                                    (typepred
                                                                                     "max_di_subgraph(G!1, tree?)")
                                                                                    (("4"
                                                                                      (hide
                                                                                       -2
                                                                                       -3)
                                                                                      (("4"
                                                                                        (replace
                                                                                         -4)
                                                                                        (("4"
                                                                                          (inst
                                                                                           -1
                                                                                           "(x!2, x!3)")
                                                                                          (("4"
                                                                                            (assert)
                                                                                            nil)))))))))))))))))))))
                                                                       ("2"
                                                                        (decompose-equality)
                                                                        (("2"
                                                                          (iff)
                                                                          (("2"
                                                                            (prop)
                                                                            (("1"
                                                                              (expand*
                                                                               "remove"
                                                                               "member")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (replace
                                                                                   -2
                                                                                   -1
                                                                                   rl)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "add"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "member")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil)))))))))))))
                                                                             ("2"
                                                                              (expand*
                                                                               "remove"
                                                                               "member")
                                                                              (("2"
                                                                                (split)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil)))
                                                                                 ("2"
                                                                                  (replace
                                                                                   -2
                                                                                   1
                                                                                   rl)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand*
                                                                                         "add"
                                                                                         "member")
                                                                                        nil)))))))))))))))))))))))))))))
                                                           ("2"
                                                            (just-install-proof
                                                             ("2"
                                                              (hide-all-but
                                                               (-1 1))
                                                              (replace
                                                               -1
                                                               1
                                                               rl)
                                                              (hide -1)
                                                              (expand
                                                               "add")
                                                              (propax)))
                                                            nil)))))))
                                                     ("3"
                                                      (just-install-proof
                                                       ("3"
                                                        (skosimp)
                                                        (case
                                                         "e!1 = (ss, tt)")
                                                        (("1"
                                                          (hide-all-but
                                                           (-1
                                                            -2
                                                            -3
                                                            -7
                                                            1))
                                                          (replace
                                                           -3
                                                           1
                                                           rl)
                                                          (expand*
                                                           "add"
                                                           "member")
                                                          (assert))
                                                         ("2"
                                                          (hide-all-but
                                                           (-1
                                                            -2
                                                            -6
                                                            -9
                                                            1
                                                            2))
                                                          (replace
                                                           -2
                                                           *
                                                           rl)
                                                          (hide -2)
                                                          (expand*
                                                           "add"
                                                           "member")
                                                          (ground)
                                                          (("1"
                                                            (expand
                                                             "max_subtree")
                                                            (typepred
                                                             "max_di_subgraph(G!1, tree?)")
                                                            (hide
                                                             -2
                                                             -3)
                                                            (replace
                                                             -4)
                                                            (inst
                                                             -1
                                                             "e!1")
                                                            (assert))
                                                           ("2"
                                                            (expand
                                                             "max_subtree")
                                                            (typepred
                                                             "max_di_subgraph(G!1, tree?)")
                                                            (hide
                                                             -2
                                                             -3)
                                                            (replace
                                                             -4)
                                                            (inst
                                                             -1
                                                             "e!1")
                                                            (assert)))))))
                                                      nil)))))))))))))))))))))
                                 ("2"
                                  (just-install-proof
                                   ("2"
                                    (expand "finseq_appl")
                                    (lemma "walk_acr")
                                    (inst
                                     -1
                                     "G!1"
                                     "TR"
                                     "length(w!1)-1"
                                     "w!1")
                                    (("1"
                                      (assert)
                                      (expand* "walk_from?" "from?")
                                      (flatten)
                                      (assert)
                                      (skosimp)
                                      (inst 2 "j!1")
                                      (assert))
                                     ("2"
                                      (expand "walk_from?")
                                      (flatten)))))
                                  nil)
                                 ("3"
                                  (just-install-proof
                                   ("3" (skosimp*) (assert)))
                                  nil)))))))
                           ("2"
                            (just-install-proof
                             ("2" (expand "max_subtree")
                              (typepred "max_di_subgraph(G!1, tree?)")
                              (hide -1 -3) (expand "di_subgraph?")
                              (flatten) (hide -2) (expand "subset?")
                              (expand "member") (inst -1 "v!1")
                              (assert)))
                            nil)))))))
                     ("2"
                      (just-install-proof
                       ("2" (expand "tree?") (split)
                        (("1" (rewrite "card_1_has_1"))
                         ("2" (skosimp) (typepred "v!1")
                          (inst 1 "v!1")))))
                      nil))))))))))))))))))
    nil)
   nil nil)
  (max_tree_all_verts-5 nil 3805639996
   ("" (skosimp*)
    (("" (decompose-equality)
      (("" (iff 1)
        (("" (prop)
          (("1" (hide -2)
            (("1" (expand "max_subtree")
              (("1" (typepred "max_di_subgraph(G!1, tree?)")
                (("1" (hide -1 -3 -5)
                  (("1" (expand "di_subgraph?")
                    (("1" (flatten)
                      (("1" (hide -2)
                        (("1" (expand* "subset?" "member")
                          (("1" (inst -1 "x!1")
                            (("1" (assert) nil)))))))))))))))))))
           ("2" (name-replace "TR" "max_subtree(G!1)" :hide? nil)
            (("2" (lemma "max_subtree_tree")
              (("2" (inst?)
                (("2" (replace -2)
                  (("2" (case "(EXISTS (v: T): vert(TR)(v))")
                    (("1" (skosimp*)
                      (("1" (expand* "connected?" "reachable?")
                        (("1" (inst -5 "v!1" "x!1")
                          (("1" (assert)
                            (("1" (skosimp*)
                              (("1"
                                (case
                                 "(EXISTS (j: posnat): j < length(w!1) AND vert(TR)(w!1(j-1)) AND
                                                                                                          	                               NOT vert(TR)(w!1(j)))")
                                (("1"
                                  (expand*
                                   "walk_from?"
                                   "walk?"
                                   "from?"
                                   "verts_in?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "finseq_appl")
                                      (("1"
                                        (skosimp*)
                                        (("1"
                                          (inst -10 "j!1 - 1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (name-replace
                                               "ss"
                                               "seq(w!1)(j!1 - 1)"
                                               :hide?
                                               nil)
                                              (("1"
                                                (name-replace
                                                 "tt"
                                                 "seq(w!1)(j!1)"
                                                 :hide?
                                                 nil)
                                                (("1"
                                                  (name
                                                   "TP"
                                                   "(# vert := add(tt,vert(TR)),
                                                                                                                                                   edges := add((ss,tt),edges(TR)) #)")
                                                  (("1"
                                                    (case "tree?(TP)")
                                                    (("1"
                                                      (lemma
                                                       "max_subtree_max")
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "G!1"
                                                         "TP")
                                                        (("1"
                                                          (replace -10)
                                                          (("1"
                                                            (replace
                                                             -3
                                                             -1
                                                             rl)
                                                            (("1"
                                                              (expand
                                                               "size"
                                                               :assert?
                                                               t)
                                                              (("1"
                                                                (rewrite
                                                                 "card_add")
                                                                (("1"
                                                                  (assert)
                                                                  nil)))))))))
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "di_subgraph?")
                                                            (("2"
                                                              (split)
                                                              (("1"
                                                                (expand*
                                                                 "subset?"
                                                                 "member")
                                                                (("1"
                                                                  (skosimp)
                                                                  (("1"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("1"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("1"
                                                                        (hide
                                                                         -1
                                                                         -3)
                                                                        (("1"
                                                                          (expand
                                                                           "di_subgraph?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (hide
                                                                               -2)
                                                                              (("1"
                                                                                (replace
                                                                                 -11)
                                                                                (("1"
                                                                                  (case
                                                                                   "vert(TR)(x!2)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -2
                                                                                         "x!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)))))))
                                                                                   ("2"
                                                                                    (case
                                                                                     "x!2 = tt")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -16
                                                                                       "j!1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil)))
                                                                                     ("2"
                                                                                      (case
                                                                                       "vert(TP) = add(tt, vert(TR))")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "add"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (decompose-equality
                                                                                           -1)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "x!2")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil)))))))))))
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-4
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "add")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil)))))))))))))))))))))))))))))))))))
                                                               ("2"
                                                                (hide-all-but
                                                                 (-2
                                                                  -9
                                                                  -14
                                                                  1))
                                                                (("2"
                                                                  (expand
                                                                   "max_subtree")
                                                                  (("2"
                                                                    (typepred
                                                                     "max_di_subgraph(G!1, tree?)")
                                                                    (("2"
                                                                      (hide
                                                                       -1
                                                                       -3)
                                                                      (("2"
                                                                        (expand
                                                                         "di_subgraph?")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (expand*
                                                                               "subset?"
                                                                               "member")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (replace
                                                                                   -4)
                                                                                  (("2"
                                                                                    (case
                                                                                     "edges(TR)(x!2)")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -2
                                                                                       "x!2")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil)))
                                                                                     ("2"
                                                                                      (case
                                                                                       "x!2 = (ss, tt)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "edge?")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)))
                                                                                       ("2"
                                                                                        (hide
                                                                                         -1
                                                                                         -5
                                                                                         3)
                                                                                        (("2"
                                                                                          (case
                                                                                           "edges(TP) = add((ss, tt), edges(TR))")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -3)
                                                                                            (("1"
                                                                                              (expand*
                                                                                               "add"
                                                                                               "member")
                                                                                              (("1"
                                                                                                (decompose-equality
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "x!2")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil)))))))))))
                                                                                           ("2"
                                                                                            (replace
                                                                                             -2
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand*
                                                                                                 "add"
                                                                                                 "member")
                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))
                                                     ("2"
                                                      (expand
                                                       "tree?"
                                                       1)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (inst 2 "tt")
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (expand
                                                               "leaf?")
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (expand
                                                                   "in_deg")
                                                                  (("1"
                                                                    (rewrite
                                                                     "card_one"
                                                                     1)
                                                                    (("1"
                                                                      (inst
                                                                       1
                                                                       "(ss, tt)")
                                                                      (("1"
                                                                        (decompose-equality
                                                                         1)
                                                                        (("1"
                                                                          (iff)
                                                                          (("1"
                                                                            (prop)
                                                                            (("1"
                                                                              (expand
                                                                               "incoming_edges")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (expand*
                                                                                   "add"
                                                                                   "member")
                                                                                  (("1"
                                                                                    (case
                                                                                     "edges(TP) = {y: edgetype | (ss, tt) = y OR edges(TR)(y)}")
                                                                                    (("1"
                                                                                      (hide
                                                                                       -4)
                                                                                      (("1"
                                                                                        (decompose-equality
                                                                                         -1)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "(x!2, x!3)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (split)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "singleton")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil)))
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -7
                                                                                                  -10
                                                                                                  3))
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "max_subtree")
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "max_di_subgraph(G!1, tree?)")
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "(x!2, x!3)")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil)))))))))))))))))))))
                                                                                     ("2"
                                                                                      (replace
                                                                                       -3
                                                                                       1
                                                                                       rl)
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (decompose-equality)
                                                                                          nil)))))))))))))
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -2
                                                                                1))
                                                                              (("2"
                                                                                (expand
                                                                                 "incoming_edges")
                                                                                (("2"
                                                                                  (expand
                                                                                   "singleton")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("2"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "add")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil)))))))))))))))))))))))))))))))))
                                                                 ("2"
                                                                  (expand
                                                                   "out_deg")
                                                                  (("2"
                                                                    (lemma
                                                                     "empty_card[edgetype]")
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "outgoing_edges(tt, TP)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand*
                                                                           "empty?"
                                                                           "member")
                                                                          (("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (hide
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "outgoing_edges")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (case
                                                                                     "edges(TR)(x!2)")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "max_subtree")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "max_di_subgraph(G!1, tree?)")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -2
                                                                                           -3)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -12)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "x!2")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil)))))))))))
                                                                                     ("2"
                                                                                      (case
                                                                                       "x!2 = (ss, tt)")
                                                                                      (("1"
                                                                                        (decompose-equality
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           (-1
                                                                                            -2
                                                                                            -4
                                                                                            -17
                                                                                            -18))
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -3)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -2)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "no_self_loops?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -3
                                                                                                   "(ss, tt)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "edge?")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil)))))))))))))))
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-1
                                                                                          -3
                                                                                          1
                                                                                          2))
                                                                                        (("2"
                                                                                          (replace
                                                                                           -2
                                                                                           -1
                                                                                           rl)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "add"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))))))))))))))))))))))))
                                                             ("2"
                                                              (case
                                                               "del_vert(TP, tt) = TR")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (propax)
                                                                  nil)))
                                                               ("2"
                                                                (hide-all-but
                                                                 (-1
                                                                  -8
                                                                  1
                                                                  4))
                                                                (("2"
                                                                  (expand
                                                                   "del_vert")
                                                                  (("2"
                                                                    (decompose-equality
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "in?")
                                                                      (("1"
                                                                        (decompose-equality)
                                                                        (("1"
                                                                          (iff)
                                                                          (("1"
                                                                            (ground)
                                                                            (("1"
                                                                              (case
                                                                               "edges(TP) = add((ss, tt), edges(TR))")
                                                                              (("1"
                                                                                (hide
                                                                                 -3)
                                                                                (("1"
                                                                                  (expand*
                                                                                   "add"
                                                                                   "member")
                                                                                  (("1"
                                                                                    (decompose-equality
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(x!2, x!3)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil)))))))))
                                                                               ("2"
                                                                                (replace
                                                                                 -2
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "add")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil)))))))))
                                                                             ("2"
                                                                              (replace
                                                                               -2
                                                                               1
                                                                               rl)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "add"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil)))))))))
                                                                             ("3"
                                                                              (hide
                                                                               -3)
                                                                              (("3"
                                                                                (expand
                                                                                 "max_subtree")
                                                                                (("3"
                                                                                  (typepred
                                                                                   "max_di_subgraph(G!1, tree?)")
                                                                                  (("3"
                                                                                    (hide
                                                                                     -2
                                                                                     -3)
                                                                                    (("3"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("3"
                                                                                        (inst
                                                                                         -1
                                                                                         "(x!2, x!3)")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil)))))))))))))
                                                                             ("4"
                                                                              (hide
                                                                               -3)
                                                                              (("4"
                                                                                (expand
                                                                                 "max_subtree")
                                                                                (("4"
                                                                                  (typepred
                                                                                   "max_di_subgraph(G!1, tree?)")
                                                                                  (("4"
                                                                                    (hide
                                                                                     -2
                                                                                     -3)
                                                                                    (("4"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("4"
                                                                                        (inst
                                                                                         -1
                                                                                         "(x!2, x!3)")
                                                                                        (("4"
                                                                                          (assert)
                                                                                          nil)))))))))))))))))))))
                                                                     ("2"
                                                                      (decompose-equality)
                                                                      (("2"
                                                                        (iff)
                                                                        (("2"
                                                                          (prop)
                                                                          (("1"
                                                                            (expand*
                                                                             "remove"
                                                                             "member")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (replace
                                                                                 -2
                                                                                 -1
                                                                                 rl)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "add"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil)))))))))))))
                                                                           ("2"
                                                                            (expand*
                                                                             "remove"
                                                                             "member")
                                                                            (("2"
                                                                              (split)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil)))
                                                                               ("2"
                                                                                (replace
                                                                                 -2
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (expand*
                                                                                       "add"
                                                                                       "member")
                                                                                      nil)))))))))))))))))))))))))))
                                                           ("2"
                                                            (hide-all-but
                                                             (-1 1))
                                                            (("2"
                                                              (replace
                                                               -1
                                                               1
                                                               rl)
                                                              (("2"
                                                                (hide
                                                                 -1)
                                                                (("2"
                                                                  (expand
                                                                   "add")
                                                                  (("2"
                                                                    (propax)
                                                                    nil)))))))))))))))
                                                     ("3"
                                                      (skosimp)
                                                      (("3"
                                                        (case
                                                         "e!1 = (ss, tt)")
                                                        (("1"
                                                          (hide-all-but
                                                           (-1
                                                            -2
                                                            -3
                                                            -7
                                                            1))
                                                          (("1"
                                                            (replace
                                                             -3
                                                             1
                                                             rl)
                                                            (("1"
                                                              (expand*
                                                               "add"
                                                               "member")
                                                              (("1"
                                                                (assert)
                                                                nil)))))))
                                                         ("2"
                                                          (hide-all-but
                                                           (-1
                                                            -2
                                                            -6
                                                            -9
                                                            1
                                                            2))
                                                          (("2"
                                                            (replace
                                                             -2
                                                             *
                                                             rl)
                                                            (("2"
                                                              (hide -2)
                                                              (("2"
                                                                (expand*
                                                                 "add"
                                                                 "member")
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("1"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("1"
                                                                        (hide
                                                                         -2
                                                                         -3)
                                                                        (("1"
                                                                          (replace
                                                                           -4)
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "e!1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil)))))))))))
                                                                   ("2"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("2"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("2"
                                                                        (hide
                                                                         -2
                                                                         -3)
                                                                        (("2"
                                                                          (replace
                                                                           -4)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "e!1")
                                                                            (("2"
                                                                              (assert)
                                                                              nil)))))))))))))))))))))))))))))))))))))))))))))
                                 ("2"
                                  (expand "finseq_appl")
                                  (("2"
                                    (lemma "walk_acr")
                                    (("2"
                                      (inst
                                       -1
                                       "G!1"
                                       "TR"
                                       "length(w!1)-1"
                                       "w!1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand*
                                           "walk_from?"
                                           "from?")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (inst 2 "j!1")
                                                  (("1"
                                                    (assert)
                                                    nil)))))))))))))
                                       ("2"
                                        (expand "walk_from?")
                                        (("2" (flatten) nil)))))))))
                                 ("3"
                                  (skosimp*)
                                  (("3" (assert) nil)))))))))
                           ("2" (expand "max_subtree")
                            (("2"
                              (typepred "max_di_subgraph(G!1, tree?)")
                              (("2"
                                (hide -1 -3)
                                (("2"
                                  (expand "di_subgraph?")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (hide -2)
                                      (("2"
                                        (expand "subset?")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (inst -1 "v!1")
                                            (("2"
                                              (assert)
                                              nil)))))))))))))))))))))))))
                     ("2" (expand "tree?")
                      (("2" (split)
                        (("1" (rewrite "card_1_has_1") nil)
                         ("2" (skosimp)
                          (("2" (typepred "v!1")
                            (("2" (inst 1 "v!1")
                              nil))))))))))))))))))))))))))
    nil)
   nil nil)
  (max_tree_all_verts-4 nil 3657796238
   ("" (skosimp*)
    (("" (decompose-equality)
      (("" (iff 1)
        (("" (prop)
          (("1" (hide -2)
            (("1" (expand "max_subtree")
              (("1" (typepred "max_di_subgraph(G!1, tree?)")
                (("1" (hide -1 -3 -5)
                  (("1" (expand "di_subgraph?")
                    (("1" (flatten)
                      (("1" (hide -2)
                        (("1" (expand* "subset?" "member")
                          (("1" (inst -1 "x!1")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (name-replace "TR" "max_subtree(G!1)" :hide? nil)
            (("2" (lemma "max_subtree_tree")
              (("2" (inst?)
                (("2" (replace -2)
                  (("2" (case "(EXISTS (v: T): vert(TR)(v))")
                    (("1" (skosimp*)
                      (("1" (expand* "connected?" "reachable?")
                        (("1" (inst -5 "v!1" "x!1")
                          (("1" (assert)
                            (("1" (skosimp*)
                              (("1"
                                (case
                                 "(EXISTS (j: posnat): j < length(w!1) AND vert(TR)(w!1(j-1)) AND
                                                                                             	                               NOT vert(TR)(w!1(j)))")
                                (("1"
                                  (expand*
                                   "walk_from?"
                                   "walk?"
                                   "from?"
                                   "verts_in?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "finseq_appl")
                                      (("1"
                                        (skosimp*)
                                        (("1"
                                          (inst -10 "j!1 - 1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (name-replace
                                               "ss"
                                               "seq(w!1)(j!1 - 1)"
                                               :hide?
                                               nil)
                                              (("1"
                                                (name-replace
                                                 "tt"
                                                 "seq(w!1)(j!1)"
                                                 :hide?
                                                 nil)
                                                (("1"
                                                  (name
                                                   "TP"
                                                   "(# vert := add(tt,vert(TR)),
                                                                                                                                    edges := add((ss,tt),edges(TR)) #)")
                                                  (("1"
                                                    (case "tree?(TP)")
                                                    (("1"
                                                      (lemma
                                                       "max_subtree_max")
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "G!1"
                                                         "TP")
                                                        (("1"
                                                          (replace -10)
                                                          (("1"
                                                            (replace
                                                             -3
                                                             -1
                                                             rl)
                                                            (("1"
                                                              (expand
                                                               "size"
                                                               :assert?
                                                               t)
                                                              (("1"
                                                                (rewrite
                                                                 "card_add")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "di_subgraph?")
                                                            (("2"
                                                              (split)
                                                              (("1"
                                                                (expand*
                                                                 "subset?"
                                                                 "member")
                                                                (("1"
                                                                  (skosimp)
                                                                  (("1"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("1"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("1"
                                                                        (hide
                                                                         -1
                                                                         -3)
                                                                        (("1"
                                                                          (expand
                                                                           "di_subgraph?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (hide
                                                                               -2)
                                                                              (("1"
                                                                                (replace
                                                                                 -11)
                                                                                (("1"
                                                                                  (case
                                                                                   "vert(TR)(x!2)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -2
                                                                                         "x!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "x!2 = tt")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -16
                                                                                       "j!1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "vert(TP) = add(tt, vert(TR))")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "add"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (decompose-equality
                                                                                           -1)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "x!2")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-4
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "add")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-2
                                                                  -9
                                                                  -14
                                                                  1))
                                                                (("2"
                                                                  (expand
                                                                   "max_subtree")
                                                                  (("2"
                                                                    (typepred
                                                                     "max_di_subgraph(G!1, tree?)")
                                                                    (("2"
                                                                      (hide
                                                                       -1
                                                                       -3)
                                                                      (("2"
                                                                        (expand
                                                                         "di_subgraph?")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (expand*
                                                                               "subset?"
                                                                               "member")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (replace
                                                                                   -4)
                                                                                  (("2"
                                                                                    (case
                                                                                     "edges(TR)(x!2)")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -2
                                                                                       "x!2")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "x!2 = (ss, tt)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "edge?")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         -1
                                                                                         -5
                                                                                         3)
                                                                                        (("2"
                                                                                          (case
                                                                                           "edges(TP) = add((ss, tt), edges(TR))")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -3)
                                                                                            (("1"
                                                                                              (expand*
                                                                                               "add"
                                                                                               "member")
                                                                                              (("1"
                                                                                                (decompose-equality
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "x!2")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (replace
                                                                                             -2
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand*
                                                                                                 "add"
                                                                                                 "member")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "tree?"
                                                       1)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (inst 2 "tt")
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (expand
                                                               "leaf?")
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (expand
                                                                   "in_deg")
                                                                  (("1"
                                                                    (rewrite
                                                                     "card_one"
                                                                     1)
                                                                    (("1"
                                                                      (inst
                                                                       1
                                                                       "(ss, tt)")
                                                                      (("1"
                                                                        (decompose-equality
                                                                         1)
                                                                        (("1"
                                                                          (iff)
                                                                          (("1"
                                                                            (prop)
                                                                            (("1"
                                                                              (expand
                                                                               "incoming_edges")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (expand*
                                                                                   "add"
                                                                                   "member")
                                                                                  (("1"
                                                                                    (case
                                                                                     "edges(TP) = {y: edgetype | (ss, tt) = y OR edges(TR)(y)}")
                                                                                    (("1"
                                                                                      (hide
                                                                                       -4)
                                                                                      (("1"
                                                                                        (decompose-equality
                                                                                         -1)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "(x!2, x!3)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (split)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "singleton")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -7
                                                                                                  -10
                                                                                                  3))
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "max_subtree")
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "max_di_subgraph(G!1, tree?)")
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "(x!2, x!3)")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -3
                                                                                       1
                                                                                       rl)
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (decompose-equality)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -2
                                                                                1))
                                                                              (("2"
                                                                                (expand
                                                                                 "incoming_edges")
                                                                                (("2"
                                                                                  (expand
                                                                                   "singleton")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("2"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "add")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "out_deg")
                                                                  (("2"
                                                                    (lemma
                                                                     "empty_card[edgetype]")
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "outgoing_edges(tt, TP)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand*
                                                                           "empty?"
                                                                           "member")
                                                                          (("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (hide
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "outgoing_edges")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (case
                                                                                     "edges(TR)(x!2)")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "max_subtree")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "max_di_subgraph(G!1, tree?)")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -2
                                                                                           -3)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -12)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "x!2")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "x!2 = (ss, tt)")
                                                                                      (("1"
                                                                                        (decompose-equality
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           (-1
                                                                                            -2
                                                                                            -4
                                                                                            -17
                                                                                            -18))
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -3)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -2)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "no_self_loops?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -3
                                                                                                   "(ss, tt)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "edge?")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-1
                                                                                          -3
                                                                                          1
                                                                                          2))
                                                                                        (("2"
                                                                                          (replace
                                                                                           -2
                                                                                           -1
                                                                                           rl)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "add"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "del_vert(TP, tt) = TR")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-1
                                                                  -8
                                                                  1
                                                                  4))
                                                                (("2"
                                                                  (expand
                                                                   "del_vert")
                                                                  (("2"
                                                                    (decompose-equality
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "in?")
                                                                      (("1"
                                                                        (decompose-equality)
                                                                        (("1"
                                                                          (iff)
                                                                          (("1"
                                                                            (ground)
                                                                            (("1"
                                                                              (case
                                                                               "edges(TP) = add((ss, tt), edges(TR))")
                                                                              (("1"
                                                                                (hide
                                                                                 -3)
                                                                                (("1"
                                                                                  (expand*
                                                                                   "add"
                                                                                   "member")
                                                                                  (("1"
                                                                                    (decompose-equality
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(x!2, x!3)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -2
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "add")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replace
                                                                               -2
                                                                               1
                                                                               rl)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "add"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (hide
                                                                               -3)
                                                                              (("3"
                                                                                (expand
                                                                                 "max_subtree")
                                                                                (("3"
                                                                                  (typepred
                                                                                   "max_di_subgraph(G!1, tree?)")
                                                                                  (("3"
                                                                                    (hide
                                                                                     -2
                                                                                     -3)
                                                                                    (("3"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("3"
                                                                                        (inst
                                                                                         -1
                                                                                         "(x!2, x!3)")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("4"
                                                                              (hide
                                                                               -3)
                                                                              (("4"
                                                                                (expand
                                                                                 "max_subtree")
                                                                                (("4"
                                                                                  (typepred
                                                                                   "max_di_subgraph(G!1, tree?)")
                                                                                  (("4"
                                                                                    (hide
                                                                                     -2
                                                                                     -3)
                                                                                    (("4"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("4"
                                                                                        (inst
                                                                                         -1
                                                                                         "(x!2, x!3)")
                                                                                        (("4"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (decompose-equality)
                                                                      (("2"
                                                                        (iff)
                                                                        (("2"
                                                                          (prop)
                                                                          (("1"
                                                                            (expand*
                                                                             "remove"
                                                                             "member")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (replace
                                                                                 -2
                                                                                 -1
                                                                                 rl)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "add"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand*
                                                                             "remove"
                                                                             "member")
                                                                            (("2"
                                                                              (split)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -2
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (expand*
                                                                                       "add"
                                                                                       "member")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-1 1))
                                                            (("2"
                                                              (replace
                                                               -1
                                                               1
                                                               rl)
                                                              (("2"
                                                                (hide
                                                                 -1)
                                                                (("2"
                                                                  (expand
                                                                   "add")
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (skosimp)
                                                      (("3"
                                                        (case
                                                         "e!1 = (ss, tt)")
                                                        (("1"
                                                          (hide-all-but
                                                           (-1
                                                            -2
                                                            -3
                                                            -7
                                                            1))
                                                          (("1"
                                                            (replace
                                                             -3
                                                             1
                                                             rl)
                                                            (("1"
                                                              (expand*
                                                               "add"
                                                               "member")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (-1
                                                            -2
                                                            -6
                                                            -9
                                                            1
                                                            2))
                                                          (("2"
                                                            (replace
                                                             -2
                                                             *
                                                             rl)
                                                            (("2"
                                                              (hide -2)
                                                              (("2"
                                                                (expand*
                                                                 "add"
                                                                 "member")
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("1"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("1"
                                                                        (hide
                                                                         -2
                                                                         -3)
                                                                        (("1"
                                                                          (replace
                                                                           -4)
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "e!1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("2"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("2"
                                                                        (hide
                                                                         -2
                                                                         -3)
                                                                        (("2"
                                                                          (replace
                                                                           -4)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "e!1")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "finseq_appl")
                                  (("2"
                                    (lemma "walk_acr")
                                    (("2"
                                      (inst
                                       -1
                                       "G!1"
                                       "TR"
                                       "length(w!1)-1"
                                       "w!1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand*
                                           "walk_from?"
                                           "from?")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (inst 2 "j!1")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "walk_from?")
                                        (("2" (flatten) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (skosimp*)
                                  (("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "max_subtree")
                            (("2"
                              (typepred "max_di_subgraph(G!1, tree?)")
                              (("2"
                                (hide -1 -3)
                                (("2"
                                  (expand "di_subgraph?")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (hide -2)
                                      (("2"
                                        (expand "subset?")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (inst -1 "v!1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "tree?")
                      (("2" (split)
                        (("1" (rewrite "card_1_has_1") nil nil)
                         ("2" (skosimp)
                          (("2" (typepred "v!1")
                            (("2" (inst 1 "v!1") nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_set type-eq-decl nil finite_sets nil)
    (predigraph type-eq-decl nil digraph_def nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (digraph_type type-eq-decl nil digraphs_imp nil)
    (nonempty? const-decl "bool" sets nil)
    (digraph type-eq-decl nil digraph_def nil)
    (digraph_verts const-decl "[digraph -> [T -> bool]]" digraphs_imp
     nil)
    (digraph_edges const-decl "[digraph -> [T, T -> bool]]"
     digraphs_imp nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (digraph_size const-decl "[digraph -> nat]" digraphs_imp nil)
    (is_finite const-decl "bool" finite_sets nil)
    (digraph_make const-decl "[v: (is_finite[T]),
 {e: (is_finite[[T, T]]) |
          FORALL (x, y: T): e(x, y) IMPLIES v(x) AND v(y)} ->
   digraph]" digraphs_imp nil)
    (Digraph type-eq-decl nil digraphs_ nil)
    (tree? def-decl "bool" trees nil) (Tree type-eq-decl nil trees nil)
    (di_subgraph? const-decl "bool" di_subgraphs_ nil)
    (Subtree type-eq-decl nil max_subtrees nil)
    (max_subtree const-decl "Subtree(G)" max_subtrees nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil subtrees nil)
    (member const-decl "bool" sets nil)
    (subset? const-decl "bool" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (Gpred type-eq-decl nil max_di_subgraphs nil)
    (di_subgraph type-eq-decl nil di_subgraphs_ nil)
    (maximal? const-decl "bool" max_di_subgraphs nil)
    (max_di_subgraph const-decl
     "{S: di_subgraph(G) | maximal?(G, S, P)}" max_di_subgraphs nil)
    (max_subtree_tree formula-decl nil max_subtrees nil)
    (card_1_has_1 formula-decl nil finite_sets nil)
    (Walk type-eq-decl nil walks_ nil)
    (walk_acr formula-decl nil subtrees nil)
    (walk? const-decl "bool" walks_ nil)
    (verts_in? const-decl "bool" walks_ nil)
    (from? const-decl "bool" walks_ nil)
    (walk_from? const-decl "bool" walks_ nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (empty? const-decl "bool" sets nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (del_vert const-decl "digraph[T]" digraph_ops nil)
    (remove const-decl "set" sets nil)
    (pair type-eq-decl nil pairs "structures/")
    (in? const-decl "bool" pairs "structures/")
    (leaf? const-decl "bool" trees nil)
    (out_deg const-decl "nat" digraph_deg nil)
    (outgoing_edges const-decl "finite_set[edgetype[T]]" digraph_deg
     nil)
    (empty_card formula-decl nil finite_sets nil)
    (in_deg const-decl "nat" digraph_deg nil)
    (TRUE const-decl "bool" booleans nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (card_one formula-decl nil finite_sets nil)
    (incoming_edges const-decl "finite_set[edgetype[T]]" digraph_deg
     nil)
    (edgetype type-eq-decl nil digraphs_utils nil)
    (max_subtree_max formula-decl nil max_subtrees nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (below type-eq-decl nil naturalnumbers nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (edge? const-decl "bool" digraphs_ nil)
    (size const-decl "nat" digraph_def nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (card_add formula-decl nil finite_sets nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (prewalk type-eq-decl nil walks_ nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (connected? const-decl "bool" digraph_conn_defs nil)
    (reachable? const-decl "bool" walks_ nil)
    (= const-decl "[T, T -> boolean]" equalities nil))
   nil)
  (max_tree_all_verts-3 nil 3560851788
   ("" (skosimp*)
    (("" (decompose-equality)
      (("" (iff 1)
        (("" (prop)
          (("1" (hide -2)
            (("1" (expand "max_subtree")
              (("1" (typepred "max_di_subgraph(G!1, tree?)")
                (("1" (hide -1 -3 -5)
                  (("1" (expand "di_subgraph?")
                    (("1" (flatten)
                      (("1" (hide -2)
                        (("1" (expand* "subset?" "member")
                          (("1" (inst -1 "x!1")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (name-replace "TR" "max_subtree(G!1)" :hide? nil)
            (("2" (lemma "max_subtree_tree")
              (("2" (inst?)
                (("2" (replace -2)
                  (("2" (case "(EXISTS (v: T): vert(TR)(v))")
                    (("1" (skosimp*)
                      (("1" (expand* "connected?" "reachable?")
                        (("1" (inst -5 "v!1" "x!1")
                          (("1" (assert)
                            (("1" (skosimp*)
                              (("1"
                                (case
                                 "(EXISTS (j: posnat): j < length(w!1) AND vert(TR)(w!1(j-1)) AND
                                                                                	                               NOT vert(TR)(w!1(j)))")
                                (("1"
                                  (expand*
                                   "walk_from?"
                                   "walk?"
                                   "from?"
                                   "verts_in?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "finseq_appl")
                                      (("1"
                                        (skosimp*)
                                        (("1"
                                          (inst -10 "j!1 - 1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (name-replace
                                               "ss"
                                               "seq(w!1)(j!1 - 1)"
                                               :hide?
                                               nil)
                                              (("1"
                                                (name-replace
                                                 "tt"
                                                 "seq(w!1)(j!1)"
                                                 :hide?
                                                 nil)
                                                (("1"
                                                  (name
                                                   "TP"
                                                   "(# vert := add(tt,vert(TR)),
                                                                                                                     edges := add((ss,tt),edges(TR)) #)")
                                                  (("1"
                                                    (case "tree?(TP)")
                                                    (("1"
                                                      (lemma
                                                       "max_subtree_max")
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "G!1"
                                                         "TP")
                                                        (("1"
                                                          (replace -10)
                                                          (("1"
                                                            (replace
                                                             -3
                                                             -1
                                                             rl)
                                                            (("1"
                                                              (expand
                                                               "size")
                                                              (("1"
                                                                (rewrite
                                                                 "card_add[T]")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "di_subgraph?")
                                                            (("2"
                                                              (split)
                                                              (("1"
                                                                (expand*
                                                                 "subset?"
                                                                 "member")
                                                                (("1"
                                                                  (skosimp)
                                                                  (("1"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("1"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("1"
                                                                        (hide
                                                                         -1
                                                                         -3)
                                                                        (("1"
                                                                          (expand
                                                                           "di_subgraph?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (hide
                                                                               -2)
                                                                              (("1"
                                                                                (replace
                                                                                 -11)
                                                                                (("1"
                                                                                  (case
                                                                                   "vert(TR)(x!2)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -2
                                                                                         "x!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "x!2 = tt")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -16
                                                                                       "j!1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "vert(TP) = add(tt, vert(TR))")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "add"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (decompose-equality
                                                                                           -1)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "x!2")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-4
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "add")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-2
                                                                  -9
                                                                  -14
                                                                  1))
                                                                (("2"
                                                                  (expand
                                                                   "max_subtree")
                                                                  (("2"
                                                                    (typepred
                                                                     "max_di_subgraph(G!1, tree?)")
                                                                    (("2"
                                                                      (hide
                                                                       -1
                                                                       -3)
                                                                      (("2"
                                                                        (expand
                                                                         "di_subgraph?")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (expand*
                                                                               "subset?"
                                                                               "member")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (replace
                                                                                   -4)
                                                                                  (("2"
                                                                                    (case
                                                                                     "edges(TR)(x!2)")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -2
                                                                                       "x!2")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "x!2 = (ss, tt)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "edge?")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         -1
                                                                                         -5
                                                                                         3)
                                                                                        (("2"
                                                                                          (case
                                                                                           "edges(TP) = add((ss, tt), edges(TR))")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -3)
                                                                                            (("1"
                                                                                              (expand*
                                                                                               "add"
                                                                                               "member")
                                                                                              (("1"
                                                                                                (decompose-equality
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "x!2")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (replace
                                                                                             -2
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand*
                                                                                                 "add"
                                                                                                 "member")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "tree?"
                                                       1)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (inst 2 "tt")
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (expand
                                                               "leaf?")
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (expand
                                                                   "in_deg")
                                                                  (("1"
                                                                    (rewrite
                                                                     "card_one"
                                                                     1)
                                                                    (("1"
                                                                      (inst
                                                                       1
                                                                       "(ss, tt)")
                                                                      (("1"
                                                                        (decompose-equality
                                                                         1)
                                                                        (("1"
                                                                          (iff)
                                                                          (("1"
                                                                            (prop)
                                                                            (("1"
                                                                              (expand
                                                                               "incoming_edges")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (expand*
                                                                                   "add"
                                                                                   "member")
                                                                                  (("1"
                                                                                    (case
                                                                                     "edges(TP) = {y: edgetype[T] | (ss, tt) = y OR edges(TR)(y)}")
                                                                                    (("1"
                                                                                      (hide
                                                                                       -4)
                                                                                      (("1"
                                                                                        (decompose-equality
                                                                                         -1)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "(x!2, x!3)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (split)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "singleton")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -7
                                                                                                  -10
                                                                                                  3))
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "max_subtree")
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "max_di_subgraph(G!1, tree?)")
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "(x!2, x!3)")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -3
                                                                                       1
                                                                                       rl)
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (decompose-equality)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -2
                                                                                1))
                                                                              (("2"
                                                                                (expand
                                                                                 "incoming_edges")
                                                                                (("2"
                                                                                  (expand
                                                                                   "singleton")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("2"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "add")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "out_deg")
                                                                  (("2"
                                                                    (lemma
                                                                     "empty_card[edgetype[T]]")
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "outgoing_edges(tt, TP)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand*
                                                                           "empty?"
                                                                           "member")
                                                                          (("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (hide
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "outgoing_edges")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (case
                                                                                     "edges(TR)(x!2)")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "max_subtree")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "max_di_subgraph(G!1, tree?)")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -2
                                                                                           -3)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -12)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "x!2")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "x!2 = (ss, tt)")
                                                                                      (("1"
                                                                                        (decompose-equality
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           (-1
                                                                                            -2
                                                                                            -4
                                                                                            -17
                                                                                            -18))
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -3)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -2)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "no_self_loops?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -3
                                                                                                   "(ss, tt)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "edge?")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-1
                                                                                          -3
                                                                                          1
                                                                                          2))
                                                                                        (("2"
                                                                                          (replace
                                                                                           -2
                                                                                           -1
                                                                                           rl)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "add"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "del_vert[T](TP, tt) = TR")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-1
                                                                  -8
                                                                  1
                                                                  4))
                                                                (("2"
                                                                  (expand
                                                                   "del_vert")
                                                                  (("2"
                                                                    (decompose-equality
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "in?")
                                                                      (("1"
                                                                        (decompose-equality)
                                                                        (("1"
                                                                          (iff)
                                                                          (("1"
                                                                            (ground)
                                                                            (("1"
                                                                              (case
                                                                               "edges(TP) = add((ss, tt), edges(TR))")
                                                                              (("1"
                                                                                (hide
                                                                                 -3)
                                                                                (("1"
                                                                                  (expand*
                                                                                   "add"
                                                                                   "member")
                                                                                  (("1"
                                                                                    (decompose-equality
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(x!2, x!3)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -2
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "add")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replace
                                                                               -2
                                                                               1
                                                                               rl)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "add"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (hide
                                                                               -3)
                                                                              (("3"
                                                                                (expand
                                                                                 "max_subtree")
                                                                                (("3"
                                                                                  (typepred
                                                                                   "max_di_subgraph(G!1, tree?)")
                                                                                  (("3"
                                                                                    (hide
                                                                                     -2
                                                                                     -3)
                                                                                    (("3"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("3"
                                                                                        (inst
                                                                                         -1
                                                                                         "(x!2, x!3)")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("4"
                                                                              (hide
                                                                               -3)
                                                                              (("4"
                                                                                (expand
                                                                                 "max_subtree")
                                                                                (("4"
                                                                                  (typepred
                                                                                   "max_di_subgraph(G!1, tree?)")
                                                                                  (("4"
                                                                                    (hide
                                                                                     -2
                                                                                     -3)
                                                                                    (("4"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("4"
                                                                                        (inst
                                                                                         -1
                                                                                         "(x!2, x!3)")
                                                                                        (("4"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (decompose-equality)
                                                                      (("2"
                                                                        (iff)
                                                                        (("2"
                                                                          (prop)
                                                                          (("1"
                                                                            (expand*
                                                                             "remove"
                                                                             "member")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (replace
                                                                                 -2
                                                                                 -1
                                                                                 rl)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "add"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand*
                                                                             "remove"
                                                                             "member")
                                                                            (("2"
                                                                              (split)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -2
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (expand*
                                                                                       "add"
                                                                                       "member")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-1 1))
                                                            (("2"
                                                              (replace
                                                               -1
                                                               1
                                                               rl)
                                                              (("2"
                                                                (hide
                                                                 -1)
                                                                (("2"
                                                                  (expand
                                                                   "add")
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (skosimp)
                                                      (("3"
                                                        (case
                                                         "e!1 = (ss, tt)")
                                                        (("1"
                                                          (hide-all-but
                                                           (-1
                                                            -2
                                                            -3
                                                            -7
                                                            1))
                                                          (("1"
                                                            (replace
                                                             -3
                                                             1
                                                             rl)
                                                            (("1"
                                                              (expand*
                                                               "add"
                                                               "member")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (-1
                                                            -2
                                                            -6
                                                            -9
                                                            1
                                                            2))
                                                          (("2"
                                                            (replace
                                                             -2
                                                             *
                                                             rl)
                                                            (("2"
                                                              (hide -2)
                                                              (("2"
                                                                (expand*
                                                                 "add"
                                                                 "member")
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("1"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("1"
                                                                        (hide
                                                                         -2
                                                                         -3)
                                                                        (("1"
                                                                          (replace
                                                                           -4)
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "e!1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("2"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("2"
                                                                        (hide
                                                                         -2
                                                                         -3)
                                                                        (("2"
                                                                          (replace
                                                                           -4)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "e!1")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "finseq_appl")
                                  (("2"
                                    (lemma "walk_acr")
                                    (("2"
                                      (inst
                                       -1
                                       "G!1"
                                       "TR"
                                       "length(w!1)-1"
                                       "w!1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand*
                                           "walk_from?"
                                           "from?")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (inst 2 "j!1")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "walk_from?")
                                        (("2" (flatten) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (skosimp*)
                                  (("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "max_subtree")
                            (("2"
                              (typepred "max_di_subgraph(G!1, tree?)")
                              (("2"
                                (hide -1 -3)
                                (("2"
                                  (expand "di_subgraph?")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (hide -2)
                                      (("2"
                                        (expand "subset?")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (inst -1 "v!1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "tree?")
                      (("2" (split)
                        (("1" (rewrite "card_1_has_1") nil nil)
                         ("2" (skosimp)
                          (("2" (typepred "v!1")
                            (("2" (inst 1 "v!1") nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_set type-eq-decl nil finite_sets nil)
    (tree? def-decl "bool" trees nil) (Tree type-eq-decl nil trees nil)
    (Subtree type-eq-decl nil max_subtrees nil)
    (max_subtree const-decl "Subtree(G)" max_subtrees nil)
    (Gpred type-eq-decl nil max_di_subgraphs nil)
    (maximal? const-decl "bool" max_di_subgraphs nil)
    (max_di_subgraph const-decl
     "{S: di_subgraph(G) | maximal?(G, S, P)}" max_di_subgraphs nil)
    (max_subtree_tree formula-decl nil max_subtrees nil)
    (card_1_has_1 formula-decl nil finite_sets nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (del_vert const-decl "digraph[T]" digraph_ops nil)
    (pair type-eq-decl nil pairs "structures/")
    (in? const-decl "bool" pairs "structures/")
    (leaf? const-decl "bool" trees nil)
    (out_deg const-decl "nat" digraph_deg nil)
    (outgoing_edges const-decl "finite_set[edgetype[T]]" digraph_deg
     nil)
    (empty_card formula-decl nil finite_sets nil)
    (in_deg const-decl "nat" digraph_deg nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (card_one formula-decl nil finite_sets nil)
    (incoming_edges const-decl "finite_set[edgetype[T]]" digraph_deg
     nil)
    (max_subtree_max formula-decl nil max_subtrees nil)
    (card_add formula-decl nil finite_sets nil)
    (connected? const-decl "bool" digraph_conn_defs nil))
   nil)
  (max_tree_all_verts-2 nil 3560594628
   ("" (skosimp*)
    (("" (decompose-equality)
      (("" (iff 1)
        (("" (prop)
          (("1" (hide -2)
            (("1" (expand "max_subtree")
              (("1" (typepred "max_di_subgraph(G!1, tree?)")
                (("1" (hide -1 -3 -5)
                  (("1" (expand "di_subgraph?")
                    (("1" (flatten)
                      (("1" (hide -2)
                        (("1" (expand* "subset?" "member")
                          (("1" (inst -1 "x!1")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (name-replace "TR" "max_subtree(G!1)" :hide? nil)
            (("2" (lemma "max_subtree_tree")
              (("2" (inst?)
                (("2" (replace -2)
                  (("2" (case "(EXISTS (v: T): vert(TR)(v))")
                    (("1" (skosimp*)
                      (("1" (expand* "connected?" "reachable?")
                        (("1" (inst -5 "v!1" "x!1")
                          (("1" (assert)
                            (("1" (skosimp*)
                              (("1"
                                (case
                                 "(EXISTS (j: posnat): j < length(w!1) AND vert(TR)(w!1(j-1)) AND
                                                      	                               NOT vert(TR)(w!1(j)))")
                                (("1"
                                  (expand*
                                   "walk_from?"
                                   "walk?"
                                   "verts_in?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "finseq_appl")
                                      (("1"
                                        (skosimp*)
                                        (("1"
                                          (inst -10 "j!1 - 1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (name-replace
                                               "ss"
                                               "seq(w!1)(j!1 - 1)"
                                               :hide?
                                               nil)
                                              (("1"
                                                (name-replace
                                                 "tt"
                                                 "seq(w!1)(j!1)"
                                                 :hide?
                                                 nil)
                                                (("1"
                                                  (name
                                                   "TP"
                                                   "(# vert := add(tt,vert(TR)),
                                                                                       edges := add((ss,tt),edges(TR)) #)")
                                                  (("1"
                                                    (case "tree?(TP)")
                                                    (("1"
                                                      (lemma
                                                       "max_subtree_max")
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "G!1"
                                                         "TP")
                                                        (("1"
                                                          (replace -10)
                                                          (("1"
                                                            (replace
                                                             -3
                                                             -1
                                                             rl)
                                                            (("1"
                                                              (expand
                                                               "size")
                                                              (("1"
                                                                (rewrite
                                                                 "card_add[T]")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "di_subgraph?")
                                                            (("2"
                                                              (split)
                                                              (("1"
                                                                (expand*
                                                                 "subset?"
                                                                 "member")
                                                                (("1"
                                                                  (skosimp)
                                                                  (("1"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("1"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("1"
                                                                        (hide
                                                                         -1
                                                                         -3)
                                                                        (("1"
                                                                          (expand
                                                                           "di_subgraph?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (hide
                                                                               -2)
                                                                              (("1"
                                                                                (replace
                                                                                 -11)
                                                                                (("1"
                                                                                  (case
                                                                                   "vert(TR)(x!2)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -2
                                                                                         "x!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "x!2 = tt")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -16
                                                                                       "j!1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "vert(TP) = add(tt, vert(TR))")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "add"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (decompose-equality
                                                                                           -1)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "x!2")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-4
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "add")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-2
                                                                  -9
                                                                  -14
                                                                  1))
                                                                (("2"
                                                                  (expand
                                                                   "max_subtree")
                                                                  (("2"
                                                                    (typepred
                                                                     "max_di_subgraph(G!1, tree?)")
                                                                    (("2"
                                                                      (hide
                                                                       -1
                                                                       -3)
                                                                      (("2"
                                                                        (expand
                                                                         "di_subgraph?")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (expand*
                                                                               "subset?"
                                                                               "member")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (replace
                                                                                   -4)
                                                                                  (("2"
                                                                                    (case
                                                                                     "edges(TR)(x!2)")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -2
                                                                                       "x!2")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "x!2 = (ss, tt)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "edge?")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         -1
                                                                                         -5
                                                                                         3)
                                                                                        (("2"
                                                                                          (case
                                                                                           "edges(TP) = add((ss, tt), edges(TR))")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -3)
                                                                                            (("1"
                                                                                              (expand*
                                                                                               "add"
                                                                                               "member")
                                                                                              (("1"
                                                                                                (decompose-equality
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "x!2")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (replace
                                                                                             -2
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand*
                                                                                                 "add"
                                                                                                 "member")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "tree?"
                                                       1)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (inst 2 "tt")
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (expand
                                                               "leaf?")
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (expand
                                                                   "in_deg")
                                                                  (("1"
                                                                    (rewrite
                                                                     "card_one")
                                                                    (("1"
                                                                      (inst
                                                                       1
                                                                       "(ss, tt)")
                                                                      (("1"
                                                                        (decompose-equality
                                                                         1)
                                                                        (("1"
                                                                          (iff)
                                                                          (("1"
                                                                            (prop)
                                                                            (("1"
                                                                              (expand
                                                                               "incoming_edges")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (expand*
                                                                                   "add"
                                                                                   "member")
                                                                                  (("1"
                                                                                    (case
                                                                                     "edges(TP) = {y: edgetype[T] | (ss, tt) = y OR edges(TR)(y)}")
                                                                                    (("1"
                                                                                      (hide
                                                                                       -4)
                                                                                      (("1"
                                                                                        (decompose-equality
                                                                                         -1)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "(x!2, x!3)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (split)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "singleton")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -7
                                                                                                  -10
                                                                                                  3))
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "max_subtree")
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "max_di_subgraph(G!1, tree?)")
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "(x!2, x!3)")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -3
                                                                                       1
                                                                                       rl)
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (decompose-equality)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -2
                                                                                1))
                                                                              (("2"
                                                                                (expand
                                                                                 "incoming_edges")
                                                                                (("2"
                                                                                  (expand
                                                                                   "singleton")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("2"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "add")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "out_deg")
                                                                  (("2"
                                                                    (lemma
                                                                     "empty_card[edgetype[T]]")
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "outgoing_edges(tt, TP)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand*
                                                                           "empty?"
                                                                           "member")
                                                                          (("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (hide
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "outgoing_edges")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (case
                                                                                     "edges(TR)(x!2)")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "max_subtree")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "max_di_subgraph(G!1, tree?)")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -2
                                                                                           -3)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -12)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "x!2")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "x!2 = (ss, tt)")
                                                                                      (("1"
                                                                                        (decompose-equality
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           (-1
                                                                                            -2
                                                                                            -4
                                                                                            -17
                                                                                            -18))
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -3)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -2)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "no_self_loops?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -3
                                                                                                   "(ss, tt)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "edge?")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-1
                                                                                          -3
                                                                                          1
                                                                                          2))
                                                                                        (("2"
                                                                                          (replace
                                                                                           -2
                                                                                           -1
                                                                                           rl)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "add"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "del_vert[T](TP, tt) = TR")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-1
                                                                  -8
                                                                  1
                                                                  4))
                                                                (("2"
                                                                  (expand
                                                                   "del_vert")
                                                                  (("2"
                                                                    (decompose-equality
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "in?")
                                                                      (("1"
                                                                        (decompose-equality)
                                                                        (("1"
                                                                          (iff)
                                                                          (("1"
                                                                            (ground)
                                                                            (("1"
                                                                              (case
                                                                               "edges(TP) = add((ss, tt), edges(TR))")
                                                                              (("1"
                                                                                (hide
                                                                                 -3)
                                                                                (("1"
                                                                                  (expand*
                                                                                   "add"
                                                                                   "member")
                                                                                  (("1"
                                                                                    (decompose-equality
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(x!2, x!3)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -2
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "add")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replace
                                                                               -2
                                                                               1
                                                                               rl)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "add"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (hide
                                                                               -3)
                                                                              (("3"
                                                                                (expand
                                                                                 "max_subtree")
                                                                                (("3"
                                                                                  (typepred
                                                                                   "max_di_subgraph(G!1, tree?)")
                                                                                  (("3"
                                                                                    (hide
                                                                                     -2
                                                                                     -3)
                                                                                    (("3"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("3"
                                                                                        (inst
                                                                                         -1
                                                                                         "(x!2, x!3)")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("4"
                                                                              (hide
                                                                               -3)
                                                                              (("4"
                                                                                (expand
                                                                                 "max_subtree")
                                                                                (("4"
                                                                                  (typepred
                                                                                   "max_di_subgraph(G!1, tree?)")
                                                                                  (("4"
                                                                                    (hide
                                                                                     -2
                                                                                     -3)
                                                                                    (("4"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("4"
                                                                                        (inst
                                                                                         -1
                                                                                         "(x!2, x!3)")
                                                                                        (("4"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (decompose-equality)
                                                                      (("2"
                                                                        (iff)
                                                                        (("2"
                                                                          (prop)
                                                                          (("1"
                                                                            (expand*
                                                                             "remove"
                                                                             "member")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (replace
                                                                                 -2
                                                                                 -1
                                                                                 rl)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "add"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand*
                                                                             "remove"
                                                                             "member")
                                                                            (("2"
                                                                              (split)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -2
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (expand*
                                                                                       "add"
                                                                                       "member")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-1 1))
                                                            (("2"
                                                              (replace
                                                               -1
                                                               1
                                                               rl)
                                                              (("2"
                                                                (hide
                                                                 -1)
                                                                (("2"
                                                                  (expand
                                                                   "add")
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (skosimp)
                                                      (("3"
                                                        (case
                                                         "e!1 = (ss, tt)")
                                                        (("1"
                                                          (hide-all-but
                                                           (-1
                                                            -2
                                                            -3
                                                            -7
                                                            1))
                                                          (("1"
                                                            (replace
                                                             -3
                                                             1
                                                             rl)
                                                            (("1"
                                                              (expand*
                                                               "add"
                                                               "member")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (-1
                                                            -2
                                                            -6
                                                            -9
                                                            1
                                                            2))
                                                          (("2"
                                                            (replace
                                                             -2
                                                             *
                                                             rl)
                                                            (("2"
                                                              (hide -2)
                                                              (("2"
                                                                (expand*
                                                                 "add"
                                                                 "member")
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("1"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("1"
                                                                        (hide
                                                                         -2
                                                                         -3)
                                                                        (("1"
                                                                          (replace
                                                                           -4)
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "e!1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "max_subtree")
                                                                    (("2"
                                                                      (typepred
                                                                       "max_di_subgraph(G!1, tree?)")
                                                                      (("2"
                                                                        (hide
                                                                         -2
                                                                         -3)
                                                                        (("2"
                                                                          (replace
                                                                           -4)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "e!1")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "finseq_appl")
                                  (("2"
                                    (lemma "walk_acr")
                                    (("2"
                                      (inst
                                       -1
                                       "G!1"
                                       "TR"
                                       "length(w!1)-1"
                                       "w!1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand*
                                           "walk_from?"
                                           "from?")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (inst 2 "j!1")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "walk_from?")
                                        (("2" (flatten) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (skosimp*)
                                  (("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "max_subtree")
                            (("2"
                              (typepred "max_di_subgraph(G!1, tree?)")
                              (("2"
                                (hide -1 -3)
                                (("2"
                                  (expand "di_subgraph?")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (hide -2)
                                      (("2"
                                        (expand "subset?")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (inst -1 "v!1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "tree?")
                      (("2" (split)
                        (("1" (rewrite "card_1_has_1") nil nil)
                         ("2" (skosimp)
                          (("2" (typepred "v!1")
                            (("2" (inst 1 "v!1") nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((tree? def-decl "bool" trees nil) (Tree type-eq-decl nil trees nil)
    (Subtree type-eq-decl nil max_subtrees nil)
    (max_subtree const-decl "Subtree(G)" max_subtrees nil)
    (Gpred type-eq-decl nil max_di_subgraphs nil)
    (maximal? const-decl "bool" max_di_subgraphs nil)
    (max_di_subgraph const-decl
     "{S: di_subgraph(G) | maximal?(G, S, P)}" max_di_subgraphs nil)
    (max_subtree_tree formula-decl nil max_subtrees nil)
    (del_vert const-decl "digraph[T]" digraph_ops nil)
    (pair type-eq-decl nil pairs "structures/")
    (in? const-decl "bool" pairs "structures/")
    (leaf? const-decl "bool" trees nil)
    (out_deg const-decl "nat" digraph_deg nil)
    (outgoing_edges const-decl "finite_set[edgetype[T]]" digraph_deg
     nil)
    (in_deg const-decl "nat" digraph_deg nil)
    (incoming_edges const-decl "finite_set[edgetype[T]]" digraph_deg
     nil)
    (max_subtree_max formula-decl nil max_subtrees nil)
    (connected? const-decl "bool" digraph_conn_defs nil))
   nil)
  (max_tree_all_verts-1 nil 3301756562
   ("" (skosimp*)
    (("" (apply-extensionality 1 :hide? t)
      (("" (iff 1)
        (("" (prop)
          (("1" (hide -2)
            (("1" (lemma "max_subtree_di_subgraph")
              (("1" (inst?)
                (("1" (expand "di_subgraph?")
                  (("1" (flatten)
                    (("1" (hide -2)
                      (("1" (expand "subset?")
                        (("1" (inst?)
                          (("1" (expand "member")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (lemma "max_subtree_tree")
            (("2" (inst?)
              (("2" (name "TR" "max_subtree(G!1)")
                (("2" (case "(EXISTS (v: T): vert(TR)(v))")
                  (("1" (skosimp*)
                    (("1" (expand "path_connected?")
                      (("1" (flatten)
                        (("1" (inst -5 "v!1" "x!1")
                          (("1" (assert)
                            (("1" (skosimp*)
                              (("1"
                                (case
                                 "(EXISTS (j: posnat): j < length(w!1) AND vert(TR)(w!1(j-1)) AND
                            	                               NOT vert(TR)(w!1(j)))")
                                (("1"
                                  (expand "finseq_appl")
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (typepred "w!1")
                                      (("1"
                                        (expand "walk?")
                                        (("1"
                                          (expand "verts_in?")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (inst - "j!1-1")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "edge?")
                                                  (("1"
                                                    (expand
                                                     "finseq_appl")
                                                    (("1"
                                                      (name
                                                       "ss"
                                                       "seq(w!1)(j!1 - 1)")
                                                      (("1"
                                                        (name
                                                         "tt"
                                                         "seq(w!1)(j!1)")
                                                        (("1"
                                                          (name
                                                           "TP"
                                                           "(# vert := add(tt,vert(TR)),
                                                         edges := add((ss,tt),edges(TR)) #)")
                                                          (("1"
                                                            (case
                                                             "tree?(TP)")
                                                            (("1"
                                                              (lemma
                                                               "max_subtree_max")
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "G!1"
                                                                 "TP")
                                                                (("1"
                                                                  (replace
                                                                   -4)
                                                                  (("1"
                                                                    (hide
                                                                     -2
                                                                     --4
                                                                     -5
                                                                     -6
                                                                     -7
                                                                     -8
                                                                     -9
                                                                     -10
                                                                     -11
                                                                     -13
                                                                     -14
                                                                     -15
                                                                     -16
                                                                     1
                                                                     3
                                                                     4)
                                                                    (("1"
                                                                      (replace
                                                                       -2
                                                                       *
                                                                       rl)
                                                                      (("1"
                                                                        (hide
                                                                         -2)
                                                                        (("1"
                                                                          (expand
                                                                           "size")
                                                                          (("1"
                                                                            (rewrite
                                                                             "card_add[T]")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (replace
                                                                     -4)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "j!1-1")
                                                                      (("2"
                                                                        (replace
                                                                         -3)
                                                                        (("2"
                                                                          (hide
                                                                           -1
                                                                           -12
                                                                           3
                                                                           4)
                                                                          (("2"
                                                                            (replace
                                                                             -1
                                                                             *
                                                                             rl)
                                                                            (("2"
                                                                              (hide
                                                                               -1)
                                                                              (("2"
                                                                                (expand
                                                                                 "di_subgraph?")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "max_subtree_di_subgraph")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -10)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -10)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "di_subgraph?")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (split
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "subset?")
                                                                                                  (("1"
                                                                                                    (skosimp*)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "member")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "add")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (reveal
                                                                                                                       -10)
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "subset?")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "member")
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "add")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (inst
                                                                                                               -3
                                                                                                               "x!2")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (replace
                                                               -2)
                                                              (("2"
                                                                (replace
                                                                 -3)
                                                                (("2"
                                                                  (expand
                                                                   "tree?")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (hide
                                                                       1)
                                                                      (("2"
                                                                        (inst
                                                                         1
                                                                         "tt")
                                                                        (("1"
                                                                          (split
                                                                           1)
                                                                          (("1"
                                                                            (hide
                                                                             -11)
                                                                            (("1"
                                                                              (case-replace
                                                                               "incident_edges(tt, TP) = singleton((ss,tt))")
                                                                              (("1"
                                                                                (expand
                                                                                 "leaf?")
                                                                                (("1"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "in_deg")
                                                                                    (("1"
                                                                                      (case-replace
                                                                                       "incoming_edges(tt, TP) = singleton(ss, tt)")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "card_singleton")
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-1
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "incident_edges")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "incoming_edges")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "in?")
                                                                                              (("2"
                                                                                                (case
                                                                                                 "subset?({e: edgetype[T] | edges(TP)(e) AND e`2 = tt},{e: edgetype[T] | edges(TP)(e) AND (tt = e`1 OR tt = e`2)})")
                                                                                                (("1"
                                                                                                  (name-replace
                                                                                                   "AAA"
                                                                                                   "{e: edgetype[T] | edges(TP)(e) AND e`2 = tt}")
                                                                                                  (("1"
                                                                                                    (name-replace
                                                                                                     "BBB"
                                                                                                     "{e: edgetype[T] | edges(TP)(e) AND (tt = e`1 OR tt = e`2)}")
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "member((ss,tt),AAA)")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "member")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "singleton")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "subset?")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "member")
                                                                                                                  (("1"
                                                                                                                    (apply-extensionality
                                                                                                                     1
                                                                                                                     :hide?
                                                                                                                     t)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -2
                                                                                                                       "(x!2, x!3)")
                                                                                                                      (("1"
                                                                                                                        (iff
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (ground)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("2"
                                                                                                            (reveal
                                                                                                             -2
                                                                                                             -3)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -3
                                                                                                               -4)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 *
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1
                                                                                                                     *
                                                                                                                     rl)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "add")
                                                                                                                          (("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      1))
                                                                                    (("2"
                                                                                      (expand
                                                                                       "out_deg")
                                                                                      (("2"
                                                                                        (case-replace
                                                                                         "outgoing_edges(tt, TP) = emptyset[edgetype[T]]")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "card_emptyset")
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           2)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "outgoing_edges")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "emptyset")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "incident_edges")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "in?")
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "subset?({e: edgetype[T] | edges(TP)(e) AND e`1 = tt},{e: edgetype[T] | edges(TP)(e) AND (tt = e`1 OR tt = e`2)})")
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "AAA"
                                                                                                       "{e: edgetype[T] | edges(TP)(e) AND e`1 = tt}")
                                                                                                      (("1"
                                                                                                        (name-replace
                                                                                                         "BBB"
                                                                                                         "{e: edgetype[T] | edges(TP)(e) AND (tt = e`1 OR tt = e`2)}")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "NOT member((ss,tt),AAA)")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "subset?")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "singleton")
                                                                                                                      (("1"
                                                                                                                        (apply-extensionality
                                                                                                                         2
                                                                                                                         :hide?
                                                                                                                         t)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "(x!2, x!3)")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -3)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 -3)
                                                                                                                (("2"
                                                                                                                  (reveal
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1
                                                                                                                     *
                                                                                                                     rl)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality
                                                                                                                           1
                                                                                                                           :hide?
                                                                                                                           t)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "subset?")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "member")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "singleton")
                                                                                                                                (("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -
                                                                                                                                     "(x!2, x!3)")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (reveal
                                                                                                                                         -18)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "no_self_loops?")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "(ss,tt)")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (reveal
                                                                                                                                               -7
                                                                                                                                               -8
                                                                                                                                               -11)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "j!1-1")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "incident_edges")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "singleton")
                                                                                    (("2"
                                                                                      (replace
                                                                                       -1
                                                                                       *
                                                                                       rl)
                                                                                      (("2"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("2"
                                                                                          (apply-extensionality
                                                                                           :hide?
                                                                                           t)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "add")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "in?")
                                                                                                (("2"
                                                                                                  (iff)
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "TR")
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (ground)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (replace
                                                                             -1
                                                                             *
                                                                             rl)
                                                                            (("2"
                                                                              (case-replace
                                                                               "del_vert[T]((# vert := add(tt, vert(TR)),
                                                                 edges :=
                                                                   add((ss, tt),
                                                                       edges(TR))
                                                                 #),
                                                              tt) = TR")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -11
                                                                                 -12
                                                                                 -13
                                                                                 -14
                                                                                 2
                                                                                 5
                                                                                 6)
                                                                                (("2"
                                                                                  (apply-extensionality
                                                                                   1
                                                                                   :hide?
                                                                                   t)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "del_vert")
                                                                                    (("1"
                                                                                      (apply-extensionality
                                                                                       1
                                                                                       :hide?
                                                                                       t)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "add")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "member")
                                                                                          (("1"
                                                                                            (iff
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "in?")
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "TR")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -2
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (ground)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "del_vert")
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1
                                                                                       :hide?
                                                                                       t)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "remove")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "add")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (iff)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (replace
                                                                           -1
                                                                           *
                                                                           rl)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (expand
                                                                               "add")
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (assert)
                                                              (("3"
                                                                (skosimp*)
                                                                (("3"
                                                                  (assert)
                                                                  (("3"
                                                                    (replace
                                                                     -3
                                                                     *
                                                                     rl)
                                                                    (("3"
                                                                      (hide
                                                                       -3)
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (expand
                                                                           "add")
                                                                          (("3"
                                                                            (expand
                                                                             "member")
                                                                            (("3"
                                                                              (replace
                                                                               -2
                                                                               *
                                                                               rl)
                                                                              (("3"
                                                                                (assert)
                                                                                (("3"
                                                                                  (typepred
                                                                                   "TR")
                                                                                  (("3"
                                                                                    (hide
                                                                                     -2
                                                                                     -3)
                                                                                    (("3"
                                                                                      (inst?)
                                                                                      (("3"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "finseq_appl")
                                  (("2"
                                    (lemma "walk_acr")
                                    (("2"
                                      (inst
                                       -1
                                       "G!1"
                                       "TR"
                                       "length(w!1)-1"
                                       "w!1")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (skosimp*)
                                          (("2"
                                            (inst?)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (skosimp*)
                                  (("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert)
                            (("2" (hide -4 2)
                              (("2"
                                (replace -2)
                                (("2"
                                  (hide -2)
                                  (("2"
                                    (typepred "TR")
                                    (("2"
                                      (hide -1 -2)
                                      (("2"
                                        (expand "di_subgraph?")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (hide -2)
                                            (("2"
                                              (expand "subset?")
                                              (("2"
                                                (expand "member")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide -4 2)
                    (("2" (replace -1)
                      (("2" (hide -1)
                        (("2" (expand "tree?")
                          (("2" (prop)
                            (("1" (lemma "card_1_has_1[T]")
                              (("1"
                                (inst?)
                                (("1" (assert) nil nil))
                                nil))
                              nil)
                             ("2" (assert)
                              (("2"
                                (skosimp*)
                                (("2"
                                  (hide -2 -3)
                                  (("2"
                                    (inst?)
                                    (("2"
                                      (lemma "card_1_has_1[Dbl]")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((max_subtree const-decl "Subtree(G)" max_subtrees nil)
    (Subtree type-eq-decl nil max_subtrees nil)
    (Tree type-eq-decl nil trees nil) (tree? def-decl "bool" trees nil)
    (max_subtree_di_subgraph formula-decl nil max_subtrees nil)
    (incident_edges const-decl "finite_set[edgetype[T]]" digraph_deg
     nil)
    (incoming_edges const-decl "finite_set[edgetype[T]]" digraph_deg
     nil)
    (in? const-decl "bool" pairs "structures/")
    (in_deg const-decl "nat" digraph_deg nil)
    (out_deg const-decl "nat" digraph_deg nil)
    (outgoing_edges const-decl "finite_set[edgetype[T]]" digraph_deg
     nil)
    (leaf? const-decl "bool" trees nil)
    (pair type-eq-decl nil pairs "structures/")
    (del_vert const-decl "digraph[T]" digraph_ops nil)
    (max_subtree_max formula-decl nil max_subtrees nil)
    (dbl const-decl "set[T]" doubletons "structures/")
    (Dbl type-eq-decl nil doubletons "structures/")
    (max_subtree_tree formula-decl nil max_subtrees nil))
   nil)))

